name: realtime

on:
  push:
    branches: ["otter"]
    paths:
      - packages/server/realtime/**
      - .github/workflows/realtime.yml
  pull_request:
    paths:
      - packages/server/realtime/**
      - .github/workflows/realtime.yml
  release:
    types: [created, edited]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/customer-os-realtime

permissions:
  contents: read
  pull-requests: read
  packages: write

defaults:
  run:
    working-directory: ./packages/server/realtime

jobs:
  static-code-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ["1.16.1"]
        otp: ["26.2.1"]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout Github repo
        uses: actions/checkout@v4
      - name: Sets up an Erlang/OTP environment
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Install dependencies
        # if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix deps.compile
      - run: mix format --check-formatted
      - run: mix credo --mute-exit-status
      - run: mix dialyzer --no-check --ignore-exit-status

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ["1.16.1"]
        otp: ["26.2.1"]

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout Github repo
        uses: actions/checkout@v4
      - name: Sets up an Erlang/OTP environment
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Install dependencies
        # if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix deps.compile
      - run: mix test --trace --slowest 10
  build-publish:
    needs:
      - static-code-analysis
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REPOSITORY_READ_WRITE_USERNAME }}
          password: ${{ secrets.REPOSITORY_READ_WRITE_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Push Docker image
        uses: docker/build-push-action@v6.9.0
        with:
          context: packages/server/realtime/
          push: ${{ github.ref_name == 'otter' || github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
