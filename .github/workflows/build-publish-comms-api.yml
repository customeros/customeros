name: Build and Publish Channels API

on:
  push:
    branches: [ "otter", "1435-comms-api-add-deployment-files-for-local" ]
    paths:
      - 'packages/server/comms-api/**'
      - '.github/workflows/build-publish-comms-api.yml'
  pull_request:
  release:
    types: [created, edited]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/comms-api

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        working-directory: ./packages/server/comms-api
        run: make all

      - name: Test
        working-directory: ./packages/server/comms-api
        run: |
              go install gotest.tools/gotestsum@latest
              gotestsum --junitfile unit-tests.xml -- -coverprofile=cover.out ./...
      - name: Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()    # run this step even if previous step failed
        with:
          report_paths: packages/server/comms-api/unit-tests.xml    # Path to test results
          include_passed: true
          annotate_only: true
          detailed_summary: true

      - name: Compute Code Coverage
        working-directory: ./packages/server/comms-api
        run: | 
             echo "## Code Coverage" >> $GITHUB_STEP_SUMMARY
             echo "|Filename|Function|Coverage|" >> $GITHUB_STEP_SUMMARY
             echo "|--------|--------|--------|" >> $GITHUB_STEP_SUMMARY
             go tool cover -func=cover.out |sed -r  's/[[:space:]]+/|/g'|sed -r 's/$/|/g'|sed -r 's/^/|/g' >> $GITHUB_STEP_SUMMARY
  publish:
    needs:
      - build

    if: github.ref_name == 'otter' || github.event_name == 'release' || github.ref_name == '1435-comms-api-add-deployment-files-for-local'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REPOSITORY_READ_WRITE_USERNAME }}
          password: ${{ secrets.REPOSITORY_READ_WRITE_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./packages/server/
          file: ./packages/server/comms-api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
