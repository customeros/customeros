name: Build customer-os-common-module

on:
  push:
    branches: [ "otter" , "3910-test-coverage-fix"]
    paths:
      - packages/server/customer-os-common-module/**
      - .github/workflows/build-customer-os-common-module.yml
  pull_request:
    paths:
      - packages/server/customer-os-common-module/**
      - .github/workflows/build-customer-os-common-module.yml
  release:
    types: [ created, edited ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/customer-os-common-module

permissions:
  contents: read
  pull-requests: read
  packages: write

defaults:
  run:
    working-directory: ./packages/server/customer-os-common-module

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Build
        run: make all

      - name: Configure Test Folders
        id: test-folders
        run: |
          test_folders=$(go list ./... | grep -v /gen | grep -v /test | paste -sd "," -)
          echo "::set-output name=test_folders::$test_folders"

      - name: Test
        run: gotestsum --junitfile unit-tests.xml -- -coverprofile=cover.out -coverpkg=${{ steps.test-folders.outputs.test_folders }} ./...

      - name: Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()    # run this step even if previous step failed
        with:
          report_paths: ./packages/server/customer-os-common-module/unit-tests.xml    # Path to test results
          include_passed: true
          annotate_only: true
          detailed_summary: true

      - name: Compute Code Coverage
        run: |
          echo "## Code Coverage" >> $GITHUB_STEP_SUMMARY
          echo "|Filename|Function|Coverage|" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|--------|" >> $GITHUB_STEP_SUMMARY
          go tool cover -func=cover.out |sed -r  's/[[:space:]]+/|/g'|sed -r 's/$/|/g'|sed -r 's/^/|/g' >> $GITHUB_STEP_SUMMARY

