name: Publish message-store-api

on:
  push:
    branches: [ "otter"]
    paths:
      - packages/server/customer-os-common-module/**
      - packages/server/message-store-api/**
      - .github/workflows/publish-message-store-api.yml
  release:
    types: [created, edited]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/message-store-api

permissions:
  contents: read
  pull-requests: read

defaults:
  run:
    working-directory: packages/server/message-store-api

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        working-directory: ./packages/server/message-store-api
        run: make all

      - name: Test
        working-directory: ./packages/server/message-store-api
        run: gotestsum --junitfile unit-tests.xml -- -coverprofile=cover.out ./...

      - name: Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()    # run this step even if previous step failed
        with:
          report_paths: packages/server/message-store-api/unit-tests.xml    # Path to test results
          include_passed: true
          annotate_only: true
          detailed_summary: true

      - name: Compute Code Coverage
        working-directory: ./packages/server/message-store-api
        run: |
             echo "## Code Coverage" >> $GITHUB_STEP_SUMMARY
             echo "|Filename|Function|Coverage|" >> $GITHUB_STEP_SUMMARY
             echo "|--------|--------|--------|" >> $GITHUB_STEP_SUMMARY
             go tool cover -func=cover.out |sed -r  's/[[:space:]]+/|/g'|sed -r 's/$/|/g'|sed -r 's/^/|/g' >> $GITHUB_STEP_SUMMARY



  publish:
    name: publish image
    needs:
      - build

    if: github.ref_name == 'otter' || github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        working-directory: ./packages/server/message-store-api
        run: make all

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REPOSITORY_READ_WRITE_USERNAME }}
          password: ${{ secrets.REPOSITORY_READ_WRITE_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: packages/server/.
          file: packages/server/message-store-api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
