apiVersion: apps/v1
kind: Deployment                 # Type of Kubernetes resource
metadata:
  name: comms-api           # Name of the Kubernetes resource
spec:
  replicas: 1                    # Number of pods to run at any given time
  selector:
    matchLabels:
      app: comms-api        # This deployment applies to any Pods matching the specified label
  template:                      # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels:                    # The labels that will be applied to all of the pods in this deployment
        app: comms-api
    spec:                        # Spec for the container which will run in the Pod
      containers:
        - image: ghcr.io/openline-ai/openline-customer-os/comms-api:latest
          name: comms-api
          imagePullPolicy: Never
          ports:
            - containerPort: 8013  # Should match the port number that the Go application listens on
              name: http-port
            - containerPort: 9013  # Should match the port number that the Go application listens on
              name: grpc-port
          env:
            - name: CUSTOMER_OS_API
              value: "http://customer-os-api-service.openline.svc.cluster.local:10000/query"
            - name: CUSTOMER_OS_API_KEY
              value: "dd9d2474-b4a9-4799-b96f-73cd0a2917e4"
            - name: FILE_STORE_API
              value: "http://file-store-api-service.openline.svc.cluster.local:10001"
            - name: FILE_STORE_API_KEY
              value: "9eb87aa2-75e7-45b2-a1e6-53ed297d0ba8"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "password"
            - name: POSTGRES_DB
              value: "openline"
            - name: POSTGRES_HOST
              value: "customer-db-postgresql.openline.svc.cluster.local"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_MAX_CONN
              value: "25"
            - name: POSTGRES_MAX_IDLE_CONN
              value: "10"
            - name: POSTGRES_CONN_MAX_LIFETIME
              value: "0"
            - name: POSTGRES_LOG_LEVEL
              value: "WARN"
            - name: COMMS_API_SERVER_ADDRESS
              value: ":8013"
            - name: MAIL_API_KEY
              value: "nobody-will-guess-this-api-key"
            - name: COMMS_API_CORS_URL
              value: "http://localhost:3000 http://localhost:3001"
            - name: WEBCHAT_API_KEY
              value: "nobody-will-guess-this-api-key"
            - name: WEBSOCKET_PING_INTERVAL
              value: "30"              
            - name: VCON_API_KEY
              value: "92c04073-17c3-4e91-8326-516bbd0750a4"   
            - name: WEBRTC_AUTH_SECRET
              value: "2c42a1b6-d776-4083-b0b6-44fecea2d022"
            - name: WEBRTC_AUTH_TTL
              value: "3600"
            - name: WEBSOCKET_PING_INTERVAL
              value: "30"
            - name: REDIS_HOST
              value: "customer-db-redis-master.openline.svc.cluster.local:6379"
            - name: REDIS_SCHEME
              value: "redis"
            - name: COMMS_API_MAIL_API_KEY
              value: "4537b6d3-915c-4050-badb-f2514a618474"
            - name: COMMS_API_VCON_API_KEY
              value: "4537b6d3-915c-4050-badb-f2514a618474"
            - name: CALCOM_SECRET
              value: "test"

            - name: JAEGER_ENABLED
              value: "true"
            - name: JAEGER_SERVICE_NAME
              value: "comms-api"
            - name: JAEGER_AGENT_HOST
              value: "jaeger.openline.svc.cluster.local"
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: JAEGER_SAMPLER_TYPE
              value: "const"
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
            - name: JAEGER_REPORTER_LOG_SPANS
              value: "true"