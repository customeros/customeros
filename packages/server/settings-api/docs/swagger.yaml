definitions:
  entity.Flow:
    properties:
      active:
        type: boolean
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  entity.FlowSequence:
    properties:
      active:
        type: boolean
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  entity.FlowSequenceContact:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      linkedinUrl:
        type: string
      updatedAt:
        type: string
    type: object
  entity.FlowSequenceSender:
    properties:
      createdAt:
        type: string
      id:
        type: string
      mailboxId:
        type: string
      updatedAt:
        type: string
    type: object
  entity.FlowSequenceStep:
    properties:
      active:
        type: boolean
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      order:
        type: integer
      template:
        type: string
      text:
        type: string
      type:
        type: string
      updatedAt:
        type: string
    type: object
  entity.TenantSettingsMailbox:
    properties:
      createdAt:
        type: string
      id:
        type: string
      mailboxPassword:
        type: string
      mailboxUsername:
        type: string
      tenant:
        type: string
      updatedAt:
        type: string
      userName:
        description: holds the email address of the user in the neo4j
        type: string
    type: object
  routes.FlowPostRequest:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  routes.FlowSequenceContactPostRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      linkedinUrl:
        type: string
    type: object
  routes.FlowSequencePostRequest:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  routes.FlowSequenceSenderPostRequest:
    properties:
      mailboxId:
        type: string
    type: object
  routes.FlowSequenceStepPostRequest:
    properties:
      id:
        type: string
      name:
        type: string
      order:
        type: integer
      template:
        type: string
      text:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
paths:
  /flows:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 100
        description: Limit
        in: query
        name: limit
        type: integer
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Flow'
            type: array
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow entity to be created / updated
        in: body
        name: flow
        required: true
        schema:
          $ref: '#/definitions/routes.FlowPostRequest'
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Flow'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /flows/{flowId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Flow'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /flows/{flowId}/activate:
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /flows/{flowId}/deactivate:
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /flows/{flowId}/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /flows/{flowId}/sequences:
    get:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 100
        description: Limit
        in: query
        name: limit
        type: integer
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.FlowSequence'
            type: array
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence entity to be created / updated
        in: body
        name: sequence
        required: true
        schema:
          $ref: '#/definitions/routes.FlowSequencePostRequest'
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.FlowSequence'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /flows/{flowId}/sequences/{flowSequenceId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.FlowSequence'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /flows/{flowId}/sequences/{flowSequenceId}/activate:
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /flows/{flowId}/sequences/{flowSequenceId}/contacts:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 100
        description: Limit
        in: query
        name: limit
        type: integer
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.FlowSequenceContact'
            type: array
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: FlowSequence contact entity to be created / updated
        in: body
        name: flowSequenceContact
        required: true
        schema:
          $ref: '#/definitions/routes.FlowSequenceContactPostRequest'
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.FlowSequenceContact'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /flows/{flowId}/sequences/{flowSequenceId}/contacts/{flowSequenceContactId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: FlowSequenceContact ID
        in: path
        name: flowSequenceContactId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
    get:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: FlowSequenceContact ID
        in: path
        name: flowSequenceContactId
        required: true
        type: string
      - description: FlowSequence contact ID
        in: path
        name: contactId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.FlowSequenceContact'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /flows/{flowId}/sequences/{flowSequenceId}/deactivate:
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /flows/{flowId}/sequences/{flowSequenceId}/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /flows/{flowId}/sequences/{flowSequenceId}/senders:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 100
        description: Limit
        in: query
        name: limit
        type: integer
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.FlowSequenceSender'
            type: array
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: FlowSequenceSender sender entity to be created / updated
        in: body
        name: flowSequenceSender
        required: true
        schema:
          $ref: '#/definitions/routes.FlowSequenceSenderPostRequest'
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.FlowSequenceSender'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /flows/{flowId}/sequences/{flowSequenceId}/senders/{flowSequenceSenderId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: FlowSequenceSender ID
        in: path
        name: flowSequenceSenderId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /flows/{flowId}/sequences/{flowSequenceId}/steps:
    get:
      consumes:
      - application/json
      parameters:
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 100
        description: Limit
        in: query
        name: limit
        type: integer
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.FlowSequenceStep'
            type: array
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: FlowSequenceStep entity to be created / updated
        in: body
        name: flowSequenceStep
        required: true
        schema:
          $ref: '#/definitions/routes.FlowSequenceStepPostRequest'
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.FlowSequenceStep'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /flows/{flowId}/sequences/{flowSequenceId}/steps/{flowSequenceStepId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: FlowSequenceStep ID
        in: path
        name: flowSequenceStepId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.FlowSequenceStep'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /flows/{flowId}/sequences/{flowSequenceId}/steps/{flowSequenceStepId}/activate:
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: FlowSequenceStep ID
        in: path
        name: flowSequenceStepId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /flows/{flowId}/sequences/{flowSequenceId}/steps/{flowSequenceStepId}/deactivate:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: FlowSequenceStep ID
        in: path
        name: flowSequenceStepId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    post:
      consumes:
      - application/json
      parameters:
      - description: Flow ID
        in: path
        name: flowId
        required: true
        type: string
      - description: FlowSequence ID
        in: path
        name: flowSequenceId
        required: true
        type: string
      - description: FlowSequenceStep ID
        in: path
        name: flowSequenceStepId
        required: true
        type: string
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /mailboxes:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization token
        in: header
        name: X-CUSTOMER-OS-API-KEY
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.TenantSettingsMailbox'
            type: array
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
swagger: "2.0"
