syntax = "proto3";

option go_package = "github.com/openline-ai/openline-customer-os/packages/server/message-store/gen/proto/";

import "google/protobuf/timestamp.proto";


enum FeedItemState {
  NEW = 0;
  IN_PROGRESS = 1;
  CLOSED = 2;
}
enum SenderType {
  CONTACT = 0;
  USER = 1;
}
enum MessageType {
  MESSAGE = 0;
  FILE = 1;
}
enum MessageDirection {
  INBOUND = 0;
  OUTBOUND = 1;
}
enum MessageChannel {
  WIDGET = 0;
  MAIL = 1;
  WHATSAPP = 2;
  FACEBOOK = 3;
  TWITTER = 4;
  VOICE = 5;
}

message Message {
  MessageType type = 1;
  string message = 2;
  MessageChannel channel = 3;
  MessageDirection direction = 4;
  optional google.protobuf.Timestamp time = 5;
  optional int64 id = 6;
  optional int64 feedId = 7;
  optional string username = 8;
  optional string userId = 9;
  optional string contactId = 10;
}
message MessagePagedResponse {
  repeated Message message = 1;
  optional google.protobuf.Timestamp before = 2;
  int32 pageSize = 3;
}

message FeedItem {
  int64 id = 1;
  string contactId= 2;
  string contactFirstName = 3;
  string contactLastName = 4;
  string contactEmail = 5;
  FeedItemState state = 6;
  string lastSenderId = 7;
  SenderType lastSenderType = 8;
  string message = 9;
  google.protobuf.Timestamp updatedOn = 10;
}
message FeedItemPagedResponse {
  repeated FeedItem feedItems = 1;
  int32 totalElements = 2;
}

message Id {
  int64 id = 1;
}

message GetMessagesRequest {
  int64 conversationId = 1;
  optional google.protobuf.Timestamp before = 2;
  int32 pageSize = 3;
}

message GetFeedsPagedRequest {
  repeated FeedItemState stateIn = 1;
  int32 page = 2;
  int32 pageSize = 3;
}

service MessageStoreService {
  rpc saveMessage(Message) returns (Message) {};
  rpc getMessages(GetMessagesRequest) returns (MessagePagedResponse) {};
  rpc getMessage(Id) returns (Message) {};
  rpc getFeeds(GetFeedsPagedRequest) returns (FeedItemPagedResponse) {};
  rpc getFeed(Id) returns (FeedItem) {};
}
