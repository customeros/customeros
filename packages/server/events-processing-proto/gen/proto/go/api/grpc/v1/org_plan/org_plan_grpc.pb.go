// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: org_plan.proto

package org_plan_grpc_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OrganizationPlanGrpcServiceClient is the client API for OrganizationPlanGrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OrganizationPlanGrpcServiceClient interface {
	CreateOrganizationPlan(ctx context.Context, in *CreateOrganizationPlanGrpcRequest, opts ...grpc.CallOption) (*OrganizationPlanIdGrpcResponse, error)
	UpdateOrganizationPlan(ctx context.Context, in *UpdateOrganizationPlanGrpcRequest, opts ...grpc.CallOption) (*OrganizationPlanIdGrpcResponse, error)
	CreateOrganizationPlanMilestone(ctx context.Context, in *CreateOrganizationPlanMilestoneGrpcRequest, opts ...grpc.CallOption) (*OrganizationPlanMilestoneIdGrpcResponse, error)
	UpdateOrganizationPlanMilestone(ctx context.Context, in *UpdateOrganizationPlanMilestoneGrpcRequest, opts ...grpc.CallOption) (*OrganizationPlanMilestoneIdGrpcResponse, error)
	ReorderOrganizationPlanMilestones(ctx context.Context, in *ReorderOrganizationPlanMilestonesGrpcRequest, opts ...grpc.CallOption) (*OrganizationPlanIdGrpcResponse, error)
}

type organizationPlanGrpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrganizationPlanGrpcServiceClient(cc grpc.ClientConnInterface) OrganizationPlanGrpcServiceClient {
	return &organizationPlanGrpcServiceClient{cc}
}

func (c *organizationPlanGrpcServiceClient) CreateOrganizationPlan(ctx context.Context, in *CreateOrganizationPlanGrpcRequest, opts ...grpc.CallOption) (*OrganizationPlanIdGrpcResponse, error) {
	out := new(OrganizationPlanIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/OrganizationPlanGrpcService/CreateOrganizationPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationPlanGrpcServiceClient) UpdateOrganizationPlan(ctx context.Context, in *UpdateOrganizationPlanGrpcRequest, opts ...grpc.CallOption) (*OrganizationPlanIdGrpcResponse, error) {
	out := new(OrganizationPlanIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/OrganizationPlanGrpcService/UpdateOrganizationPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationPlanGrpcServiceClient) CreateOrganizationPlanMilestone(ctx context.Context, in *CreateOrganizationPlanMilestoneGrpcRequest, opts ...grpc.CallOption) (*OrganizationPlanMilestoneIdGrpcResponse, error) {
	out := new(OrganizationPlanMilestoneIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/OrganizationPlanGrpcService/CreateOrganizationPlanMilestone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationPlanGrpcServiceClient) UpdateOrganizationPlanMilestone(ctx context.Context, in *UpdateOrganizationPlanMilestoneGrpcRequest, opts ...grpc.CallOption) (*OrganizationPlanMilestoneIdGrpcResponse, error) {
	out := new(OrganizationPlanMilestoneIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/OrganizationPlanGrpcService/UpdateOrganizationPlanMilestone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationPlanGrpcServiceClient) ReorderOrganizationPlanMilestones(ctx context.Context, in *ReorderOrganizationPlanMilestonesGrpcRequest, opts ...grpc.CallOption) (*OrganizationPlanIdGrpcResponse, error) {
	out := new(OrganizationPlanIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/OrganizationPlanGrpcService/ReorderOrganizationPlanMilestones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrganizationPlanGrpcServiceServer is the server API for OrganizationPlanGrpcService service.
// All implementations should embed UnimplementedOrganizationPlanGrpcServiceServer
// for forward compatibility
type OrganizationPlanGrpcServiceServer interface {
	CreateOrganizationPlan(context.Context, *CreateOrganizationPlanGrpcRequest) (*OrganizationPlanIdGrpcResponse, error)
	UpdateOrganizationPlan(context.Context, *UpdateOrganizationPlanGrpcRequest) (*OrganizationPlanIdGrpcResponse, error)
	CreateOrganizationPlanMilestone(context.Context, *CreateOrganizationPlanMilestoneGrpcRequest) (*OrganizationPlanMilestoneIdGrpcResponse, error)
	UpdateOrganizationPlanMilestone(context.Context, *UpdateOrganizationPlanMilestoneGrpcRequest) (*OrganizationPlanMilestoneIdGrpcResponse, error)
	ReorderOrganizationPlanMilestones(context.Context, *ReorderOrganizationPlanMilestonesGrpcRequest) (*OrganizationPlanIdGrpcResponse, error)
}

// UnimplementedOrganizationPlanGrpcServiceServer should be embedded to have forward compatible implementations.
type UnimplementedOrganizationPlanGrpcServiceServer struct {
}

func (UnimplementedOrganizationPlanGrpcServiceServer) CreateOrganizationPlan(context.Context, *CreateOrganizationPlanGrpcRequest) (*OrganizationPlanIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrganizationPlan not implemented")
}
func (UnimplementedOrganizationPlanGrpcServiceServer) UpdateOrganizationPlan(context.Context, *UpdateOrganizationPlanGrpcRequest) (*OrganizationPlanIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrganizationPlan not implemented")
}
func (UnimplementedOrganizationPlanGrpcServiceServer) CreateOrganizationPlanMilestone(context.Context, *CreateOrganizationPlanMilestoneGrpcRequest) (*OrganizationPlanMilestoneIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrganizationPlanMilestone not implemented")
}
func (UnimplementedOrganizationPlanGrpcServiceServer) UpdateOrganizationPlanMilestone(context.Context, *UpdateOrganizationPlanMilestoneGrpcRequest) (*OrganizationPlanMilestoneIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrganizationPlanMilestone not implemented")
}
func (UnimplementedOrganizationPlanGrpcServiceServer) ReorderOrganizationPlanMilestones(context.Context, *ReorderOrganizationPlanMilestonesGrpcRequest) (*OrganizationPlanIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReorderOrganizationPlanMilestones not implemented")
}

// UnsafeOrganizationPlanGrpcServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OrganizationPlanGrpcServiceServer will
// result in compilation errors.
type UnsafeOrganizationPlanGrpcServiceServer interface {
	mustEmbedUnimplementedOrganizationPlanGrpcServiceServer()
}

func RegisterOrganizationPlanGrpcServiceServer(s grpc.ServiceRegistrar, srv OrganizationPlanGrpcServiceServer) {
	s.RegisterService(&OrganizationPlanGrpcService_ServiceDesc, srv)
}

func _OrganizationPlanGrpcService_CreateOrganizationPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrganizationPlanGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationPlanGrpcServiceServer).CreateOrganizationPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrganizationPlanGrpcService/CreateOrganizationPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationPlanGrpcServiceServer).CreateOrganizationPlan(ctx, req.(*CreateOrganizationPlanGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationPlanGrpcService_UpdateOrganizationPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrganizationPlanGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationPlanGrpcServiceServer).UpdateOrganizationPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrganizationPlanGrpcService/UpdateOrganizationPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationPlanGrpcServiceServer).UpdateOrganizationPlan(ctx, req.(*UpdateOrganizationPlanGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationPlanGrpcService_CreateOrganizationPlanMilestone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrganizationPlanMilestoneGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationPlanGrpcServiceServer).CreateOrganizationPlanMilestone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrganizationPlanGrpcService/CreateOrganizationPlanMilestone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationPlanGrpcServiceServer).CreateOrganizationPlanMilestone(ctx, req.(*CreateOrganizationPlanMilestoneGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationPlanGrpcService_UpdateOrganizationPlanMilestone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrganizationPlanMilestoneGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationPlanGrpcServiceServer).UpdateOrganizationPlanMilestone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrganizationPlanGrpcService/UpdateOrganizationPlanMilestone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationPlanGrpcServiceServer).UpdateOrganizationPlanMilestone(ctx, req.(*UpdateOrganizationPlanMilestoneGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationPlanGrpcService_ReorderOrganizationPlanMilestones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReorderOrganizationPlanMilestonesGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationPlanGrpcServiceServer).ReorderOrganizationPlanMilestones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrganizationPlanGrpcService/ReorderOrganizationPlanMilestones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationPlanGrpcServiceServer).ReorderOrganizationPlanMilestones(ctx, req.(*ReorderOrganizationPlanMilestonesGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OrganizationPlanGrpcService_ServiceDesc is the grpc.ServiceDesc for OrganizationPlanGrpcService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OrganizationPlanGrpcService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "OrganizationPlanGrpcService",
	HandlerType: (*OrganizationPlanGrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrganizationPlan",
			Handler:    _OrganizationPlanGrpcService_CreateOrganizationPlan_Handler,
		},
		{
			MethodName: "UpdateOrganizationPlan",
			Handler:    _OrganizationPlanGrpcService_UpdateOrganizationPlan_Handler,
		},
		{
			MethodName: "CreateOrganizationPlanMilestone",
			Handler:    _OrganizationPlanGrpcService_CreateOrganizationPlanMilestone_Handler,
		},
		{
			MethodName: "UpdateOrganizationPlanMilestone",
			Handler:    _OrganizationPlanGrpcService_UpdateOrganizationPlanMilestone_Handler,
		},
		{
			MethodName: "ReorderOrganizationPlanMilestones",
			Handler:    _OrganizationPlanGrpcService_ReorderOrganizationPlanMilestones_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "org_plan.proto",
}
