// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: service_line_item.proto

package service_line_item_grpc_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ServiceLineItemGrpcServiceClient is the client API for ServiceLineItemGrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ServiceLineItemGrpcServiceClient interface {
	CreateServiceLineItem(ctx context.Context, in *CreateServiceLineItemGrpcRequest, opts ...grpc.CallOption) (*ServiceLineItemIdGrpcResponse, error)
	UpdateServiceLineItem(ctx context.Context, in *UpdateServiceLineItemGrpcRequest, opts ...grpc.CallOption) (*ServiceLineItemIdGrpcResponse, error)
	DeleteServiceLineItem(ctx context.Context, in *DeleteServiceLineItemGrpcRequest, opts ...grpc.CallOption) (*ServiceLineItemIdGrpcResponse, error)
	CloseServiceLineItem(ctx context.Context, in *CloseServiceLineItemGrpcRequest, opts ...grpc.CallOption) (*ServiceLineItemIdGrpcResponse, error)
	UpdateServiceLineItemSet(ctx context.Context, in *UpdateServiceLineItemSetGrpcRequest, opts ...grpc.CallOption) (*ServiceLineItemIdSetGrpcResponse, error)
}

type serviceLineItemGrpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewServiceLineItemGrpcServiceClient(cc grpc.ClientConnInterface) ServiceLineItemGrpcServiceClient {
	return &serviceLineItemGrpcServiceClient{cc}
}

func (c *serviceLineItemGrpcServiceClient) CreateServiceLineItem(ctx context.Context, in *CreateServiceLineItemGrpcRequest, opts ...grpc.CallOption) (*ServiceLineItemIdGrpcResponse, error) {
	out := new(ServiceLineItemIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/ServiceLineItemGrpcService/CreateServiceLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceLineItemGrpcServiceClient) UpdateServiceLineItem(ctx context.Context, in *UpdateServiceLineItemGrpcRequest, opts ...grpc.CallOption) (*ServiceLineItemIdGrpcResponse, error) {
	out := new(ServiceLineItemIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/ServiceLineItemGrpcService/UpdateServiceLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceLineItemGrpcServiceClient) DeleteServiceLineItem(ctx context.Context, in *DeleteServiceLineItemGrpcRequest, opts ...grpc.CallOption) (*ServiceLineItemIdGrpcResponse, error) {
	out := new(ServiceLineItemIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/ServiceLineItemGrpcService/DeleteServiceLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceLineItemGrpcServiceClient) CloseServiceLineItem(ctx context.Context, in *CloseServiceLineItemGrpcRequest, opts ...grpc.CallOption) (*ServiceLineItemIdGrpcResponse, error) {
	out := new(ServiceLineItemIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/ServiceLineItemGrpcService/CloseServiceLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceLineItemGrpcServiceClient) UpdateServiceLineItemSet(ctx context.Context, in *UpdateServiceLineItemSetGrpcRequest, opts ...grpc.CallOption) (*ServiceLineItemIdSetGrpcResponse, error) {
	out := new(ServiceLineItemIdSetGrpcResponse)
	err := c.cc.Invoke(ctx, "/ServiceLineItemGrpcService/UpdateServiceLineItemSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceLineItemGrpcServiceServer is the server API for ServiceLineItemGrpcService service.
// All implementations should embed UnimplementedServiceLineItemGrpcServiceServer
// for forward compatibility
type ServiceLineItemGrpcServiceServer interface {
	CreateServiceLineItem(context.Context, *CreateServiceLineItemGrpcRequest) (*ServiceLineItemIdGrpcResponse, error)
	UpdateServiceLineItem(context.Context, *UpdateServiceLineItemGrpcRequest) (*ServiceLineItemIdGrpcResponse, error)
	DeleteServiceLineItem(context.Context, *DeleteServiceLineItemGrpcRequest) (*ServiceLineItemIdGrpcResponse, error)
	CloseServiceLineItem(context.Context, *CloseServiceLineItemGrpcRequest) (*ServiceLineItemIdGrpcResponse, error)
	UpdateServiceLineItemSet(context.Context, *UpdateServiceLineItemSetGrpcRequest) (*ServiceLineItemIdSetGrpcResponse, error)
}

// UnimplementedServiceLineItemGrpcServiceServer should be embedded to have forward compatible implementations.
type UnimplementedServiceLineItemGrpcServiceServer struct {
}

func (UnimplementedServiceLineItemGrpcServiceServer) CreateServiceLineItem(context.Context, *CreateServiceLineItemGrpcRequest) (*ServiceLineItemIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceLineItem not implemented")
}
func (UnimplementedServiceLineItemGrpcServiceServer) UpdateServiceLineItem(context.Context, *UpdateServiceLineItemGrpcRequest) (*ServiceLineItemIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServiceLineItem not implemented")
}
func (UnimplementedServiceLineItemGrpcServiceServer) DeleteServiceLineItem(context.Context, *DeleteServiceLineItemGrpcRequest) (*ServiceLineItemIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteServiceLineItem not implemented")
}
func (UnimplementedServiceLineItemGrpcServiceServer) CloseServiceLineItem(context.Context, *CloseServiceLineItemGrpcRequest) (*ServiceLineItemIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseServiceLineItem not implemented")
}
func (UnimplementedServiceLineItemGrpcServiceServer) UpdateServiceLineItemSet(context.Context, *UpdateServiceLineItemSetGrpcRequest) (*ServiceLineItemIdSetGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServiceLineItemSet not implemented")
}

// UnsafeServiceLineItemGrpcServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ServiceLineItemGrpcServiceServer will
// result in compilation errors.
type UnsafeServiceLineItemGrpcServiceServer interface {
	mustEmbedUnimplementedServiceLineItemGrpcServiceServer()
}

func RegisterServiceLineItemGrpcServiceServer(s grpc.ServiceRegistrar, srv ServiceLineItemGrpcServiceServer) {
	s.RegisterService(&ServiceLineItemGrpcService_ServiceDesc, srv)
}

func _ServiceLineItemGrpcService_CreateServiceLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceLineItemGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceLineItemGrpcServiceServer).CreateServiceLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServiceLineItemGrpcService/CreateServiceLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceLineItemGrpcServiceServer).CreateServiceLineItem(ctx, req.(*CreateServiceLineItemGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceLineItemGrpcService_UpdateServiceLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServiceLineItemGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceLineItemGrpcServiceServer).UpdateServiceLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServiceLineItemGrpcService/UpdateServiceLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceLineItemGrpcServiceServer).UpdateServiceLineItem(ctx, req.(*UpdateServiceLineItemGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceLineItemGrpcService_DeleteServiceLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceLineItemGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceLineItemGrpcServiceServer).DeleteServiceLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServiceLineItemGrpcService/DeleteServiceLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceLineItemGrpcServiceServer).DeleteServiceLineItem(ctx, req.(*DeleteServiceLineItemGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceLineItemGrpcService_CloseServiceLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseServiceLineItemGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceLineItemGrpcServiceServer).CloseServiceLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServiceLineItemGrpcService/CloseServiceLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceLineItemGrpcServiceServer).CloseServiceLineItem(ctx, req.(*CloseServiceLineItemGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceLineItemGrpcService_UpdateServiceLineItemSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServiceLineItemSetGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceLineItemGrpcServiceServer).UpdateServiceLineItemSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServiceLineItemGrpcService/UpdateServiceLineItemSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceLineItemGrpcServiceServer).UpdateServiceLineItemSet(ctx, req.(*UpdateServiceLineItemSetGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ServiceLineItemGrpcService_ServiceDesc is the grpc.ServiceDesc for ServiceLineItemGrpcService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ServiceLineItemGrpcService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ServiceLineItemGrpcService",
	HandlerType: (*ServiceLineItemGrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateServiceLineItem",
			Handler:    _ServiceLineItemGrpcService_CreateServiceLineItem_Handler,
		},
		{
			MethodName: "UpdateServiceLineItem",
			Handler:    _ServiceLineItemGrpcService_UpdateServiceLineItem_Handler,
		},
		{
			MethodName: "DeleteServiceLineItem",
			Handler:    _ServiceLineItemGrpcService_DeleteServiceLineItem_Handler,
		},
		{
			MethodName: "CloseServiceLineItem",
			Handler:    _ServiceLineItemGrpcService_CloseServiceLineItem_Handler,
		},
		{
			MethodName: "UpdateServiceLineItemSet",
			Handler:    _ServiceLineItemGrpcService_UpdateServiceLineItemSet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_line_item.proto",
}
