// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: issue.proto

package issue_grpc_service

import (
	common "github.com/openline-ai/openline-customer-os/packages/server/events-processing-proto/gen/proto/go/api/grpc/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpsertIssueGrpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tenant                    string                       `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	LoggedInUserId            string                       `protobuf:"bytes,3,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	Subject                   string                       `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Description               string                       `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Status                    string                       `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Priority                  string                       `protobuf:"bytes,9,opt,name=priority,proto3" json:"priority,omitempty"`
	CreatedAt                 *timestamppb.Timestamp       `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt                 *timestamppb.Timestamp       `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ReportedByOrganizationId  *string                      `protobuf:"bytes,12,opt,name=reportedByOrganizationId,proto3,oneof" json:"reportedByOrganizationId,omitempty"`
	SourceFields              *common.SourceFields         `protobuf:"bytes,13,opt,name=sourceFields,proto3" json:"sourceFields,omitempty"`
	ExternalSystemFields      *common.ExternalSystemFields `protobuf:"bytes,14,opt,name=externalSystemFields,proto3" json:"externalSystemFields,omitempty"`
	SubmittedByOrganizationId *string                      `protobuf:"bytes,15,opt,name=submittedByOrganizationId,proto3,oneof" json:"submittedByOrganizationId,omitempty"`
	SubmittedByUserId         *string                      `protobuf:"bytes,16,opt,name=submittedByUserId,proto3,oneof" json:"submittedByUserId,omitempty"`
	GroupId                   *string                      `protobuf:"bytes,17,opt,name=groupId,proto3,oneof" json:"groupId,omitempty"`
}

func (x *UpsertIssueGrpcRequest) Reset() {
	*x = UpsertIssueGrpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertIssueGrpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertIssueGrpcRequest) ProtoMessage() {}

func (x *UpsertIssueGrpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertIssueGrpcRequest.ProtoReflect.Descriptor instead.
func (*UpsertIssueGrpcRequest) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertIssueGrpcRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertIssueGrpcRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *UpsertIssueGrpcRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *UpsertIssueGrpcRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *UpsertIssueGrpcRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpsertIssueGrpcRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpsertIssueGrpcRequest) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *UpsertIssueGrpcRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UpsertIssueGrpcRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UpsertIssueGrpcRequest) GetReportedByOrganizationId() string {
	if x != nil && x.ReportedByOrganizationId != nil {
		return *x.ReportedByOrganizationId
	}
	return ""
}

func (x *UpsertIssueGrpcRequest) GetSourceFields() *common.SourceFields {
	if x != nil {
		return x.SourceFields
	}
	return nil
}

func (x *UpsertIssueGrpcRequest) GetExternalSystemFields() *common.ExternalSystemFields {
	if x != nil {
		return x.ExternalSystemFields
	}
	return nil
}

func (x *UpsertIssueGrpcRequest) GetSubmittedByOrganizationId() string {
	if x != nil && x.SubmittedByOrganizationId != nil {
		return *x.SubmittedByOrganizationId
	}
	return ""
}

func (x *UpsertIssueGrpcRequest) GetSubmittedByUserId() string {
	if x != nil && x.SubmittedByUserId != nil {
		return *x.SubmittedByUserId
	}
	return ""
}

func (x *UpsertIssueGrpcRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

type AddUserAssigneeToIssueGrpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant         string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	IssueId        string `protobuf:"bytes,2,opt,name=issueId,proto3" json:"issueId,omitempty"`
	UserId         string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	LoggedInUserId string `protobuf:"bytes,4,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	AppSource      string `protobuf:"bytes,5,opt,name=appSource,proto3" json:"appSource,omitempty"`
}

func (x *AddUserAssigneeToIssueGrpcRequest) Reset() {
	*x = AddUserAssigneeToIssueGrpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserAssigneeToIssueGrpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserAssigneeToIssueGrpcRequest) ProtoMessage() {}

func (x *AddUserAssigneeToIssueGrpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserAssigneeToIssueGrpcRequest.ProtoReflect.Descriptor instead.
func (*AddUserAssigneeToIssueGrpcRequest) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{1}
}

func (x *AddUserAssigneeToIssueGrpcRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *AddUserAssigneeToIssueGrpcRequest) GetIssueId() string {
	if x != nil {
		return x.IssueId
	}
	return ""
}

func (x *AddUserAssigneeToIssueGrpcRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUserAssigneeToIssueGrpcRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *AddUserAssigneeToIssueGrpcRequest) GetAppSource() string {
	if x != nil {
		return x.AppSource
	}
	return ""
}

type RemoveUserAssigneeFromIssueGrpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant         string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	IssueId        string `protobuf:"bytes,2,opt,name=issueId,proto3" json:"issueId,omitempty"`
	UserId         string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	LoggedInUserId string `protobuf:"bytes,4,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	AppSource      string `protobuf:"bytes,5,opt,name=appSource,proto3" json:"appSource,omitempty"`
}

func (x *RemoveUserAssigneeFromIssueGrpcRequest) Reset() {
	*x = RemoveUserAssigneeFromIssueGrpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserAssigneeFromIssueGrpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserAssigneeFromIssueGrpcRequest) ProtoMessage() {}

func (x *RemoveUserAssigneeFromIssueGrpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserAssigneeFromIssueGrpcRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserAssigneeFromIssueGrpcRequest) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveUserAssigneeFromIssueGrpcRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *RemoveUserAssigneeFromIssueGrpcRequest) GetIssueId() string {
	if x != nil {
		return x.IssueId
	}
	return ""
}

func (x *RemoveUserAssigneeFromIssueGrpcRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveUserAssigneeFromIssueGrpcRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *RemoveUserAssigneeFromIssueGrpcRequest) GetAppSource() string {
	if x != nil {
		return x.AppSource
	}
	return ""
}

type AddUserFollowerToIssueGrpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant         string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	IssueId        string `protobuf:"bytes,2,opt,name=issueId,proto3" json:"issueId,omitempty"`
	UserId         string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	LoggedInUserId string `protobuf:"bytes,4,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	AppSource      string `protobuf:"bytes,5,opt,name=appSource,proto3" json:"appSource,omitempty"`
}

func (x *AddUserFollowerToIssueGrpcRequest) Reset() {
	*x = AddUserFollowerToIssueGrpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserFollowerToIssueGrpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserFollowerToIssueGrpcRequest) ProtoMessage() {}

func (x *AddUserFollowerToIssueGrpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserFollowerToIssueGrpcRequest.ProtoReflect.Descriptor instead.
func (*AddUserFollowerToIssueGrpcRequest) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{3}
}

func (x *AddUserFollowerToIssueGrpcRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *AddUserFollowerToIssueGrpcRequest) GetIssueId() string {
	if x != nil {
		return x.IssueId
	}
	return ""
}

func (x *AddUserFollowerToIssueGrpcRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUserFollowerToIssueGrpcRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *AddUserFollowerToIssueGrpcRequest) GetAppSource() string {
	if x != nil {
		return x.AppSource
	}
	return ""
}

type RemoveUserFollowerFromIssueGrpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant         string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	IssueId        string `protobuf:"bytes,2,opt,name=issueId,proto3" json:"issueId,omitempty"`
	UserId         string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	LoggedInUserId string `protobuf:"bytes,4,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	AppSource      string `protobuf:"bytes,5,opt,name=appSource,proto3" json:"appSource,omitempty"`
}

func (x *RemoveUserFollowerFromIssueGrpcRequest) Reset() {
	*x = RemoveUserFollowerFromIssueGrpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserFollowerFromIssueGrpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserFollowerFromIssueGrpcRequest) ProtoMessage() {}

func (x *RemoveUserFollowerFromIssueGrpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserFollowerFromIssueGrpcRequest.ProtoReflect.Descriptor instead.
func (*RemoveUserFollowerFromIssueGrpcRequest) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveUserFollowerFromIssueGrpcRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *RemoveUserFollowerFromIssueGrpcRequest) GetIssueId() string {
	if x != nil {
		return x.IssueId
	}
	return ""
}

func (x *RemoveUserFollowerFromIssueGrpcRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveUserFollowerFromIssueGrpcRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *RemoveUserFollowerFromIssueGrpcRequest) GetAppSource() string {
	if x != nil {
		return x.AppSource
	}
	return ""
}

type IssueIdGrpcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IssueIdGrpcResponse) Reset() {
	*x = IssueIdGrpcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueIdGrpcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueIdGrpcResponse) ProtoMessage() {}

func (x *IssueIdGrpcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueIdGrpcResponse.ProtoReflect.Descriptor instead.
func (*IssueIdGrpcResponse) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{5}
}

func (x *IssueIdGrpcResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_issue_proto protoreflect.FileDescriptor

var file_issue_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xfd, 0x05, 0x0a, 0x16, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x3f, 0x0a, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x31, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x49, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x41, 0x0a, 0x19, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x19, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x11, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x22, 0xb3, 0x01, 0x0a, 0x21, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x65, 0x54, 0x6f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x47, 0x72, 0x70, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65,
	0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x26, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x21, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x6f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x47, 0x72, 0x70,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67,
	0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70,
	0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x70, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x26, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x46,
	0x72, 0x6f, 0x6d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x47, 0x72,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0x94, 0x03, 0x0a, 0x10, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3c, 0x0a, 0x0b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x17,
	0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x47, 0x72, 0x70, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49,
	0x64, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x12, 0x22, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x54, 0x6f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x47, 0x72,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x12, 0x27, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x47, 0x72,
	0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x49, 0x64, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x12, 0x22, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x54, 0x6f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x47, 0x72, 0x70, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64,
	0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x12, 0x27, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x49, 0x64, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x34, 0x42, 0x0a, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x3b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_issue_proto_rawDescOnce sync.Once
	file_issue_proto_rawDescData = file_issue_proto_rawDesc
)

func file_issue_proto_rawDescGZIP() []byte {
	file_issue_proto_rawDescOnce.Do(func() {
		file_issue_proto_rawDescData = protoimpl.X.CompressGZIP(file_issue_proto_rawDescData)
	})
	return file_issue_proto_rawDescData
}

var file_issue_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_issue_proto_goTypes = []any{
	(*UpsertIssueGrpcRequest)(nil),                 // 0: UpsertIssueGrpcRequest
	(*AddUserAssigneeToIssueGrpcRequest)(nil),      // 1: AddUserAssigneeToIssueGrpcRequest
	(*RemoveUserAssigneeFromIssueGrpcRequest)(nil), // 2: RemoveUserAssigneeFromIssueGrpcRequest
	(*AddUserFollowerToIssueGrpcRequest)(nil),      // 3: AddUserFollowerToIssueGrpcRequest
	(*RemoveUserFollowerFromIssueGrpcRequest)(nil), // 4: RemoveUserFollowerFromIssueGrpcRequest
	(*IssueIdGrpcResponse)(nil),                    // 5: IssueIdGrpcResponse
	(*timestamppb.Timestamp)(nil),                  // 6: google.protobuf.Timestamp
	(*common.SourceFields)(nil),                    // 7: SourceFields
	(*common.ExternalSystemFields)(nil),            // 8: ExternalSystemFields
}
var file_issue_proto_depIdxs = []int32{
	6, // 0: UpsertIssueGrpcRequest.createdAt:type_name -> google.protobuf.Timestamp
	6, // 1: UpsertIssueGrpcRequest.updatedAt:type_name -> google.protobuf.Timestamp
	7, // 2: UpsertIssueGrpcRequest.sourceFields:type_name -> SourceFields
	8, // 3: UpsertIssueGrpcRequest.externalSystemFields:type_name -> ExternalSystemFields
	0, // 4: issueGrpcService.UpsertIssue:input_type -> UpsertIssueGrpcRequest
	1, // 5: issueGrpcService.AddUserAssignee:input_type -> AddUserAssigneeToIssueGrpcRequest
	2, // 6: issueGrpcService.RemoveUserAssignee:input_type -> RemoveUserAssigneeFromIssueGrpcRequest
	3, // 7: issueGrpcService.AddUserFollower:input_type -> AddUserFollowerToIssueGrpcRequest
	4, // 8: issueGrpcService.RemoveUserFollower:input_type -> RemoveUserFollowerFromIssueGrpcRequest
	5, // 9: issueGrpcService.UpsertIssue:output_type -> IssueIdGrpcResponse
	5, // 10: issueGrpcService.AddUserAssignee:output_type -> IssueIdGrpcResponse
	5, // 11: issueGrpcService.RemoveUserAssignee:output_type -> IssueIdGrpcResponse
	5, // 12: issueGrpcService.AddUserFollower:output_type -> IssueIdGrpcResponse
	5, // 13: issueGrpcService.RemoveUserFollower:output_type -> IssueIdGrpcResponse
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_issue_proto_init() }
func file_issue_proto_init() {
	if File_issue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_issue_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UpsertIssueGrpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddUserAssigneeToIssueGrpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveUserAssigneeFromIssueGrpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AddUserFollowerToIssueGrpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveUserFollowerFromIssueGrpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*IssueIdGrpcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_issue_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_issue_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_issue_proto_goTypes,
		DependencyIndexes: file_issue_proto_depIdxs,
		MessageInfos:      file_issue_proto_msgTypes,
	}.Build()
	File_issue_proto = out.File
	file_issue_proto_rawDesc = nil
	file_issue_proto_goTypes = nil
	file_issue_proto_depIdxs = nil
}
