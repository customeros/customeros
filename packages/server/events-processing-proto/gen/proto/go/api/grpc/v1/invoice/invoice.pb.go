// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: invoice.proto

package invoice_grpc_service

import (
	common "github.com/openline-ai/openline-customer-os/packages/server/events-processing-proto/gen/proto/go/api/grpc/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InvoiceStatus int32

const (
	InvoiceStatus_INVOICE_STATUS_NONE  InvoiceStatus = 0
	InvoiceStatus_INVOICE_STATUS_DRAFT InvoiceStatus = 1
	InvoiceStatus_INVOICE_STATUS_DUE   InvoiceStatus = 2
	InvoiceStatus_INVOICE_STATUS_PAID  InvoiceStatus = 3
)

// Enum value maps for InvoiceStatus.
var (
	InvoiceStatus_name = map[int32]string{
		0: "INVOICE_STATUS_NONE",
		1: "INVOICE_STATUS_DRAFT",
		2: "INVOICE_STATUS_DUE",
		3: "INVOICE_STATUS_PAID",
	}
	InvoiceStatus_value = map[string]int32{
		"INVOICE_STATUS_NONE":  0,
		"INVOICE_STATUS_DRAFT": 1,
		"INVOICE_STATUS_DUE":   2,
		"INVOICE_STATUS_PAID":  3,
	}
)

func (x InvoiceStatus) Enum() *InvoiceStatus {
	p := new(InvoiceStatus)
	*p = x
	return p
}

func (x InvoiceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvoiceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_invoice_proto_enumTypes[0].Descriptor()
}

func (InvoiceStatus) Type() protoreflect.EnumType {
	return &file_invoice_proto_enumTypes[0]
}

func (x InvoiceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvoiceStatus.Descriptor instead.
func (InvoiceStatus) EnumDescriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{0}
}

type InvoiceFieldMask int32

const (
	InvoiceFieldMask_INVOICE_FIELD_NONE   InvoiceFieldMask = 0 // No property, ignored by the server
	InvoiceFieldMask_INVOICE_FIELD_STATUS InvoiceFieldMask = 1
)

// Enum value maps for InvoiceFieldMask.
var (
	InvoiceFieldMask_name = map[int32]string{
		0: "INVOICE_FIELD_NONE",
		1: "INVOICE_FIELD_STATUS",
	}
	InvoiceFieldMask_value = map[string]int32{
		"INVOICE_FIELD_NONE":   0,
		"INVOICE_FIELD_STATUS": 1,
	}
)

func (x InvoiceFieldMask) Enum() *InvoiceFieldMask {
	p := new(InvoiceFieldMask)
	*p = x
	return p
}

func (x InvoiceFieldMask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvoiceFieldMask) Descriptor() protoreflect.EnumDescriptor {
	return file_invoice_proto_enumTypes[1].Descriptor()
}

func (InvoiceFieldMask) Type() protoreflect.EnumType {
	return &file_invoice_proto_enumTypes[1]
}

func (x InvoiceFieldMask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvoiceFieldMask.Descriptor instead.
func (InvoiceFieldMask) EnumDescriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{1}
}

type NewInvoiceForContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant             string                 `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"` // mandatory
	LoggedInUserId     string                 `protobuf:"bytes,2,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	ContractId         string                 `protobuf:"bytes,3,opt,name=contractId,proto3" json:"contractId,omitempty"` // mandatory
	DryRun             bool                   `protobuf:"varint,5,opt,name=dryRun,proto3" json:"dryRun,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	SourceFields       *common.SourceFields   `protobuf:"bytes,8,opt,name=sourceFields,proto3" json:"sourceFields,omitempty"`
	InvoicePeriodStart *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=invoicePeriodStart,proto3" json:"invoicePeriodStart,omitempty"` // mandatory
	InvoicePeriodEnd   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=invoicePeriodEnd,proto3" json:"invoicePeriodEnd,omitempty"`    // mandatory
	Currency           string                 `protobuf:"bytes,11,opt,name=currency,proto3" json:"currency,omitempty"`                    // mandatory
	BillingCycle       common.BillingCycle    `protobuf:"varint,12,opt,name=billingCycle,proto3,enum=BillingCycle" json:"billingCycle,omitempty"`
	Note               string                 `protobuf:"bytes,13,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *NewInvoiceForContractRequest) Reset() {
	*x = NewInvoiceForContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewInvoiceForContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewInvoiceForContractRequest) ProtoMessage() {}

func (x *NewInvoiceForContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewInvoiceForContractRequest.ProtoReflect.Descriptor instead.
func (*NewInvoiceForContractRequest) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{0}
}

func (x *NewInvoiceForContractRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *NewInvoiceForContractRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *NewInvoiceForContractRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *NewInvoiceForContractRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *NewInvoiceForContractRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NewInvoiceForContractRequest) GetSourceFields() *common.SourceFields {
	if x != nil {
		return x.SourceFields
	}
	return nil
}

func (x *NewInvoiceForContractRequest) GetInvoicePeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.InvoicePeriodStart
	}
	return nil
}

func (x *NewInvoiceForContractRequest) GetInvoicePeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.InvoicePeriodEnd
	}
	return nil
}

func (x *NewInvoiceForContractRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *NewInvoiceForContractRequest) GetBillingCycle() common.BillingCycle {
	if x != nil {
		return x.BillingCycle
	}
	return common.BillingCycle(0)
}

func (x *NewInvoiceForContractRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type FillInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant                        string                 `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	LoggedInUserId                string                 `protobuf:"bytes,2,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	InvoiceId                     string                 `protobuf:"bytes,3,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	Amount                        float64                `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Vat                           float64                `protobuf:"fixed64,5,opt,name=vat,proto3" json:"vat,omitempty"`
	Total                         float64                `protobuf:"fixed64,6,opt,name=total,proto3" json:"total,omitempty"`
	InvoiceLines                  []*InvoiceLine         `protobuf:"bytes,7,rep,name=invoiceLines,proto3" json:"invoiceLines,omitempty"`
	UpdatedAt                     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	AppSource                     string                 `protobuf:"bytes,9,opt,name=appSource,proto3" json:"appSource,omitempty"`
	Status                        InvoiceStatus          `protobuf:"varint,10,opt,name=status,proto3,enum=InvoiceStatus" json:"status,omitempty"`
	Note                          string                 `protobuf:"bytes,11,opt,name=Note,proto3" json:"Note,omitempty"`
	DomesticPaymentsBankInfo      string                 `protobuf:"bytes,12,opt,name=DomesticPaymentsBankInfo,proto3" json:"DomesticPaymentsBankInfo,omitempty"`
	InternationalPaymentsBankInfo string                 `protobuf:"bytes,13,opt,name=InternationalPaymentsBankInfo,proto3" json:"InternationalPaymentsBankInfo,omitempty"`
	Customer                      *FillInvoiceCustomer   `protobuf:"bytes,14,opt,name=Customer,proto3" json:"Customer,omitempty"`
	Provider                      *FillInvoiceProvider   `protobuf:"bytes,15,opt,name=Provider,proto3" json:"Provider,omitempty"`
}

func (x *FillInvoiceRequest) Reset() {
	*x = FillInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FillInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillInvoiceRequest) ProtoMessage() {}

func (x *FillInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillInvoiceRequest.ProtoReflect.Descriptor instead.
func (*FillInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{1}
}

func (x *FillInvoiceRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *FillInvoiceRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *FillInvoiceRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *FillInvoiceRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *FillInvoiceRequest) GetVat() float64 {
	if x != nil {
		return x.Vat
	}
	return 0
}

func (x *FillInvoiceRequest) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FillInvoiceRequest) GetInvoiceLines() []*InvoiceLine {
	if x != nil {
		return x.InvoiceLines
	}
	return nil
}

func (x *FillInvoiceRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *FillInvoiceRequest) GetAppSource() string {
	if x != nil {
		return x.AppSource
	}
	return ""
}

func (x *FillInvoiceRequest) GetStatus() InvoiceStatus {
	if x != nil {
		return x.Status
	}
	return InvoiceStatus_INVOICE_STATUS_NONE
}

func (x *FillInvoiceRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *FillInvoiceRequest) GetDomesticPaymentsBankInfo() string {
	if x != nil {
		return x.DomesticPaymentsBankInfo
	}
	return ""
}

func (x *FillInvoiceRequest) GetInternationalPaymentsBankInfo() string {
	if x != nil {
		return x.InternationalPaymentsBankInfo
	}
	return ""
}

func (x *FillInvoiceRequest) GetCustomer() *FillInvoiceCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *FillInvoiceRequest) GetProvider() *FillInvoiceProvider {
	if x != nil {
		return x.Provider
	}
	return nil
}

type FillInvoiceCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	AddressLine1 string `protobuf:"bytes,2,opt,name=AddressLine1,proto3" json:"AddressLine1,omitempty"`
	AddressLine2 string `protobuf:"bytes,3,opt,name=AddressLine2,proto3" json:"AddressLine2,omitempty"`
	Zip          string `protobuf:"bytes,4,opt,name=Zip,proto3" json:"Zip,omitempty"`
	Locality     string `protobuf:"bytes,5,opt,name=Locality,proto3" json:"Locality,omitempty"`
	Country      string `protobuf:"bytes,6,opt,name=Country,proto3" json:"Country,omitempty"`
	Email        string `protobuf:"bytes,7,opt,name=Email,proto3" json:"Email,omitempty"`
}

func (x *FillInvoiceCustomer) Reset() {
	*x = FillInvoiceCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FillInvoiceCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillInvoiceCustomer) ProtoMessage() {}

func (x *FillInvoiceCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillInvoiceCustomer.ProtoReflect.Descriptor instead.
func (*FillInvoiceCustomer) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{2}
}

func (x *FillInvoiceCustomer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FillInvoiceCustomer) GetAddressLine1() string {
	if x != nil {
		return x.AddressLine1
	}
	return ""
}

func (x *FillInvoiceCustomer) GetAddressLine2() string {
	if x != nil {
		return x.AddressLine2
	}
	return ""
}

func (x *FillInvoiceCustomer) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *FillInvoiceCustomer) GetLocality() string {
	if x != nil {
		return x.Locality
	}
	return ""
}

func (x *FillInvoiceCustomer) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *FillInvoiceCustomer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type FillInvoiceProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogoUrl      string `protobuf:"bytes,1,opt,name=LogoUrl,proto3" json:"LogoUrl,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email        string `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	AddressLine1 string `protobuf:"bytes,4,opt,name=AddressLine1,proto3" json:"AddressLine1,omitempty"`
	AddressLine2 string `protobuf:"bytes,5,opt,name=AddressLine2,proto3" json:"AddressLine2,omitempty"`
	Zip          string `protobuf:"bytes,6,opt,name=Zip,proto3" json:"Zip,omitempty"`
	Locality     string `protobuf:"bytes,7,opt,name=Locality,proto3" json:"Locality,omitempty"`
	Country      string `protobuf:"bytes,8,opt,name=Country,proto3" json:"Country,omitempty"`
}

func (x *FillInvoiceProvider) Reset() {
	*x = FillInvoiceProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FillInvoiceProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillInvoiceProvider) ProtoMessage() {}

func (x *FillInvoiceProvider) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillInvoiceProvider.ProtoReflect.Descriptor instead.
func (*FillInvoiceProvider) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{3}
}

func (x *FillInvoiceProvider) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *FillInvoiceProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FillInvoiceProvider) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *FillInvoiceProvider) GetAddressLine1() string {
	if x != nil {
		return x.AddressLine1
	}
	return ""
}

func (x *FillInvoiceProvider) GetAddressLine2() string {
	if x != nil {
		return x.AddressLine2
	}
	return ""
}

func (x *FillInvoiceProvider) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *FillInvoiceProvider) GetLocality() string {
	if x != nil {
		return x.Locality
	}
	return ""
}

func (x *FillInvoiceProvider) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type InvoiceLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceLineItemId       string            `protobuf:"bytes,1,opt,name=serviceLineItemId,proto3" json:"serviceLineItemId,omitempty"`
	Name                    string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price                   float64           `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Quantity                int64             `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Amount                  float64           `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Vat                     float64           `protobuf:"fixed64,6,opt,name=vat,proto3" json:"vat,omitempty"`
	Total                   float64           `protobuf:"fixed64,7,opt,name=total,proto3" json:"total,omitempty"`
	BilledType              common.BilledType `protobuf:"varint,8,opt,name=billedType,proto3,enum=BilledType" json:"billedType,omitempty"`
	ServiceLineItemParentId string            `protobuf:"bytes,9,opt,name=serviceLineItemParentId,proto3" json:"serviceLineItemParentId,omitempty"`
}

func (x *InvoiceLine) Reset() {
	*x = InvoiceLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceLine) ProtoMessage() {}

func (x *InvoiceLine) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceLine.ProtoReflect.Descriptor instead.
func (*InvoiceLine) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{4}
}

func (x *InvoiceLine) GetServiceLineItemId() string {
	if x != nil {
		return x.ServiceLineItemId
	}
	return ""
}

func (x *InvoiceLine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InvoiceLine) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *InvoiceLine) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *InvoiceLine) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *InvoiceLine) GetVat() float64 {
	if x != nil {
		return x.Vat
	}
	return 0
}

func (x *InvoiceLine) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *InvoiceLine) GetBilledType() common.BilledType {
	if x != nil {
		return x.BilledType
	}
	return common.BilledType(0)
}

func (x *InvoiceLine) GetServiceLineItemParentId() string {
	if x != nil {
		return x.ServiceLineItemParentId
	}
	return ""
}

type GenerateInvoicePdfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant         string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	LoggedInUserId string `protobuf:"bytes,2,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	InvoiceId      string `protobuf:"bytes,3,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	AppSource      string `protobuf:"bytes,4,opt,name=appSource,proto3" json:"appSource,omitempty"`
}

func (x *GenerateInvoicePdfRequest) Reset() {
	*x = GenerateInvoicePdfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateInvoicePdfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInvoicePdfRequest) ProtoMessage() {}

func (x *GenerateInvoicePdfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInvoicePdfRequest.ProtoReflect.Descriptor instead.
func (*GenerateInvoicePdfRequest) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateInvoicePdfRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *GenerateInvoicePdfRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *GenerateInvoicePdfRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *GenerateInvoicePdfRequest) GetAppSource() string {
	if x != nil {
		return x.AppSource
	}
	return ""
}

type PayInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant         string                 `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	LoggedInUserId string                 `protobuf:"bytes,2,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	InvoiceId      string                 `protobuf:"bytes,3,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	SourceFields   *common.SourceFields   `protobuf:"bytes,5,opt,name=sourceFields,proto3" json:"sourceFields,omitempty"`
}

func (x *PayInvoiceRequest) Reset() {
	*x = PayInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayInvoiceRequest) ProtoMessage() {}

func (x *PayInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayInvoiceRequest.ProtoReflect.Descriptor instead.
func (*PayInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{6}
}

func (x *PayInvoiceRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *PayInvoiceRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *PayInvoiceRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *PayInvoiceRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PayInvoiceRequest) GetSourceFields() *common.SourceFields {
	if x != nil {
		return x.SourceFields
	}
	return nil
}

type PdfGeneratedInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant           string                 `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	LoggedInUserId   string                 `protobuf:"bytes,2,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	InvoiceId        string                 `protobuf:"bytes,3,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	RepositoryFileId string                 `protobuf:"bytes,4,opt,name=repositoryFileId,proto3" json:"repositoryFileId,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	AppSource        string                 `protobuf:"bytes,6,opt,name=appSource,proto3" json:"appSource,omitempty"`
}

func (x *PdfGeneratedInvoiceRequest) Reset() {
	*x = PdfGeneratedInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdfGeneratedInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdfGeneratedInvoiceRequest) ProtoMessage() {}

func (x *PdfGeneratedInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdfGeneratedInvoiceRequest.ProtoReflect.Descriptor instead.
func (*PdfGeneratedInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{7}
}

func (x *PdfGeneratedInvoiceRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *PdfGeneratedInvoiceRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *PdfGeneratedInvoiceRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *PdfGeneratedInvoiceRequest) GetRepositoryFileId() string {
	if x != nil {
		return x.RepositoryFileId
	}
	return ""
}

func (x *PdfGeneratedInvoiceRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PdfGeneratedInvoiceRequest) GetAppSource() string {
	if x != nil {
		return x.AppSource
	}
	return ""
}

type SimulateInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant                 string                   `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	LoggedInUserId         string                   `protobuf:"bytes,2,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	ContractId             string                   `protobuf:"bytes,3,opt,name=contractId,proto3" json:"contractId,omitempty"`
	Date                   *timestamppb.Timestamp   `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	DryRunServiceLineItems []*DryRunServiceLineItem `protobuf:"bytes,6,rep,name=dryRunServiceLineItems,proto3" json:"dryRunServiceLineItems,omitempty"`
	CreatedAt              *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	SourceFields           *common.SourceFields     `protobuf:"bytes,8,opt,name=sourceFields,proto3" json:"sourceFields,omitempty"`
}

func (x *SimulateInvoiceRequest) Reset() {
	*x = SimulateInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimulateInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulateInvoiceRequest) ProtoMessage() {}

func (x *SimulateInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulateInvoiceRequest.ProtoReflect.Descriptor instead.
func (*SimulateInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{8}
}

func (x *SimulateInvoiceRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *SimulateInvoiceRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *SimulateInvoiceRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *SimulateInvoiceRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *SimulateInvoiceRequest) GetDryRunServiceLineItems() []*DryRunServiceLineItem {
	if x != nil {
		return x.DryRunServiceLineItems
	}
	return nil
}

func (x *SimulateInvoiceRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SimulateInvoiceRequest) GetSourceFields() *common.SourceFields {
	if x != nil {
		return x.SourceFields
	}
	return nil
}

type DryRunServiceLineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceLineItemId string            `protobuf:"bytes,1,opt,name=serviceLineItemId,proto3" json:"serviceLineItemId,omitempty"`
	Name              string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Billed            common.BilledType `protobuf:"varint,4,opt,name=billed,proto3,enum=BilledType" json:"billed,omitempty"`
	Price             float64           `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Quantity          int64             `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *DryRunServiceLineItem) Reset() {
	*x = DryRunServiceLineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DryRunServiceLineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunServiceLineItem) ProtoMessage() {}

func (x *DryRunServiceLineItem) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DryRunServiceLineItem.ProtoReflect.Descriptor instead.
func (*DryRunServiceLineItem) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{9}
}

func (x *DryRunServiceLineItem) GetServiceLineItemId() string {
	if x != nil {
		return x.ServiceLineItemId
	}
	return ""
}

func (x *DryRunServiceLineItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DryRunServiceLineItem) GetBilled() common.BilledType {
	if x != nil {
		return x.Billed
	}
	return common.BilledType(0)
}

func (x *DryRunServiceLineItem) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DryRunServiceLineItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type UpdateInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant         string                 `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	LoggedInUserId string                 `protobuf:"bytes,2,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	InvoiceId      string                 `protobuf:"bytes,3,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	AppSource      string                 `protobuf:"bytes,5,opt,name=appSource,proto3" json:"appSource,omitempty"`
	Status         InvoiceStatus          `protobuf:"varint,6,opt,name=status,proto3,enum=InvoiceStatus" json:"status,omitempty"`
	FieldsMask     []InvoiceFieldMask     `protobuf:"varint,7,rep,packed,name=fieldsMask,proto3,enum=InvoiceFieldMask" json:"fieldsMask,omitempty"`
}

func (x *UpdateInvoiceRequest) Reset() {
	*x = UpdateInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInvoiceRequest) ProtoMessage() {}

func (x *UpdateInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInvoiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateInvoiceRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *UpdateInvoiceRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *UpdateInvoiceRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *UpdateInvoiceRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UpdateInvoiceRequest) GetAppSource() string {
	if x != nil {
		return x.AppSource
	}
	return ""
}

func (x *UpdateInvoiceRequest) GetStatus() InvoiceStatus {
	if x != nil {
		return x.Status
	}
	return InvoiceStatus_INVOICE_STATUS_NONE
}

func (x *UpdateInvoiceRequest) GetFieldsMask() []InvoiceFieldMask {
	if x != nil {
		return x.FieldsMask
	}
	return nil
}

type PayInvoiceNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant         string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	InvoiceId      string `protobuf:"bytes,2,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	LoggedInUserId string `protobuf:"bytes,3,opt,name=loggedInUserId,proto3" json:"loggedInUserId,omitempty"`
	AppSource      string `protobuf:"bytes,4,opt,name=appSource,proto3" json:"appSource,omitempty"`
}

func (x *PayInvoiceNotificationRequest) Reset() {
	*x = PayInvoiceNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayInvoiceNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayInvoiceNotificationRequest) ProtoMessage() {}

func (x *PayInvoiceNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayInvoiceNotificationRequest.ProtoReflect.Descriptor instead.
func (*PayInvoiceNotificationRequest) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{11}
}

func (x *PayInvoiceNotificationRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *PayInvoiceNotificationRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *PayInvoiceNotificationRequest) GetLoggedInUserId() string {
	if x != nil {
		return x.LoggedInUserId
	}
	return ""
}

func (x *PayInvoiceNotificationRequest) GetAppSource() string {
	if x != nil {
		return x.AppSource
	}
	return ""
}

type InvoiceIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *InvoiceIdResponse) Reset() {
	*x = InvoiceIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invoice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceIdResponse) ProtoMessage() {}

func (x *InvoiceIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invoice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceIdResponse.ProtoReflect.Descriptor instead.
func (*InvoiceIdResponse) Descriptor() ([]byte, []int) {
	return file_invoice_proto_rawDescGZIP(), []int{12}
}

func (x *InvoiceIdResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_invoice_proto protoreflect.FileDescriptor

var file_invoice_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x03, 0x0a,
	0x1c, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c,
	0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64,
	0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x31, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x46,
	0x0a, 0x10, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45,
	0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x31, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0xde, 0x04, 0x0a, 0x12, 0x46, 0x69,
	0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x67,
	0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x76, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30,
	0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x6e, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x73,
	0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70,
	0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x70, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x44, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x69, 0x63,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x44, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x69, 0x63,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x44, 0x0a, 0x1d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x61,
	0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x69, 0x6c, 0x6c, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x46, 0x69, 0x6c,
	0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xcf, 0x01, 0x0a, 0x13, 0x46,
	0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x32, 0x12, 0x10,
	0x0a, 0x03, 0x5a, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x5a, 0x69, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xe9, 0x01, 0x0a,
	0x13, 0x46, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x32, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x32,
	0x12, 0x10, 0x0a, 0x03, 0x5a, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x5a,
	0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xa8, 0x02, 0x0a, 0x0b, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x76, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x0a,
	0x62, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x62,
	0x69, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x67,
	0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xde, 0x01,
	0x0a, 0x11, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6c,
	0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xfe,
	0x01, 0x0a, 0x1a, 0x50, 0x64, 0x66, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c,
	0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0xe5, 0x02, 0x0a, 0x16, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67,
	0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x16, 0x64, 0x72,
	0x79, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x72, 0x79,
	0x52, 0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x16, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x15, 0x44, 0x72, 0x79, 0x52,
	0x75, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa7, 0x02, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6c,
	0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x70, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x70, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x31, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x4d, 0x61, 0x73, 0x6b, 0x22, 0x9b, 0x01, 0x0a, 0x1d, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x2a, 0x73, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x4f,
	0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x49,
	0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x55,
	0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x49, 0x44, 0x10, 0x03, 0x2a, 0x44, 0x0a, 0x10,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56, 0x4f,
	0x49, 0x43, 0x45, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x01, 0x32, 0xa6, 0x04, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x47, 0x72,
	0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x15, 0x4e, 0x65, 0x77,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x1d, 0x2e, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x46, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x50, 0x64, 0x66, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x13, 0x50, 0x64, 0x66, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x50, 0x64, 0x66,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x50,
	0x61, 0x79, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x50, 0x61, 0x79, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x12, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x16, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x42, 0x0c, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x3b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_invoice_proto_rawDescOnce sync.Once
	file_invoice_proto_rawDescData = file_invoice_proto_rawDesc
)

func file_invoice_proto_rawDescGZIP() []byte {
	file_invoice_proto_rawDescOnce.Do(func() {
		file_invoice_proto_rawDescData = protoimpl.X.CompressGZIP(file_invoice_proto_rawDescData)
	})
	return file_invoice_proto_rawDescData
}

var file_invoice_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_invoice_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_invoice_proto_goTypes = []interface{}{
	(InvoiceStatus)(0),                    // 0: InvoiceStatus
	(InvoiceFieldMask)(0),                 // 1: InvoiceFieldMask
	(*NewInvoiceForContractRequest)(nil),  // 2: NewInvoiceForContractRequest
	(*FillInvoiceRequest)(nil),            // 3: FillInvoiceRequest
	(*FillInvoiceCustomer)(nil),           // 4: FillInvoiceCustomer
	(*FillInvoiceProvider)(nil),           // 5: FillInvoiceProvider
	(*InvoiceLine)(nil),                   // 6: InvoiceLine
	(*GenerateInvoicePdfRequest)(nil),     // 7: GenerateInvoicePdfRequest
	(*PayInvoiceRequest)(nil),             // 8: PayInvoiceRequest
	(*PdfGeneratedInvoiceRequest)(nil),    // 9: PdfGeneratedInvoiceRequest
	(*SimulateInvoiceRequest)(nil),        // 10: SimulateInvoiceRequest
	(*DryRunServiceLineItem)(nil),         // 11: DryRunServiceLineItem
	(*UpdateInvoiceRequest)(nil),          // 12: UpdateInvoiceRequest
	(*PayInvoiceNotificationRequest)(nil), // 13: PayInvoiceNotificationRequest
	(*InvoiceIdResponse)(nil),             // 14: InvoiceIdResponse
	(*timestamppb.Timestamp)(nil),         // 15: google.protobuf.Timestamp
	(*common.SourceFields)(nil),           // 16: SourceFields
	(common.BillingCycle)(0),              // 17: BillingCycle
	(common.BilledType)(0),                // 18: BilledType
}
var file_invoice_proto_depIdxs = []int32{
	15, // 0: NewInvoiceForContractRequest.createdAt:type_name -> google.protobuf.Timestamp
	16, // 1: NewInvoiceForContractRequest.sourceFields:type_name -> SourceFields
	15, // 2: NewInvoiceForContractRequest.invoicePeriodStart:type_name -> google.protobuf.Timestamp
	15, // 3: NewInvoiceForContractRequest.invoicePeriodEnd:type_name -> google.protobuf.Timestamp
	17, // 4: NewInvoiceForContractRequest.billingCycle:type_name -> BillingCycle
	6,  // 5: FillInvoiceRequest.invoiceLines:type_name -> InvoiceLine
	15, // 6: FillInvoiceRequest.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 7: FillInvoiceRequest.status:type_name -> InvoiceStatus
	4,  // 8: FillInvoiceRequest.Customer:type_name -> FillInvoiceCustomer
	5,  // 9: FillInvoiceRequest.Provider:type_name -> FillInvoiceProvider
	18, // 10: InvoiceLine.billedType:type_name -> BilledType
	15, // 11: PayInvoiceRequest.updatedAt:type_name -> google.protobuf.Timestamp
	16, // 12: PayInvoiceRequest.sourceFields:type_name -> SourceFields
	15, // 13: PdfGeneratedInvoiceRequest.updatedAt:type_name -> google.protobuf.Timestamp
	15, // 14: SimulateInvoiceRequest.date:type_name -> google.protobuf.Timestamp
	11, // 15: SimulateInvoiceRequest.dryRunServiceLineItems:type_name -> DryRunServiceLineItem
	15, // 16: SimulateInvoiceRequest.createdAt:type_name -> google.protobuf.Timestamp
	16, // 17: SimulateInvoiceRequest.sourceFields:type_name -> SourceFields
	18, // 18: DryRunServiceLineItem.billed:type_name -> BilledType
	15, // 19: UpdateInvoiceRequest.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 20: UpdateInvoiceRequest.status:type_name -> InvoiceStatus
	1,  // 21: UpdateInvoiceRequest.fieldsMask:type_name -> InvoiceFieldMask
	2,  // 22: InvoiceGrpcService.NewInvoiceForContract:input_type -> NewInvoiceForContractRequest
	3,  // 23: InvoiceGrpcService.FillInvoice:input_type -> FillInvoiceRequest
	7,  // 24: InvoiceGrpcService.GenerateInvoicePdf:input_type -> GenerateInvoicePdfRequest
	9,  // 25: InvoiceGrpcService.PdfGeneratedInvoice:input_type -> PdfGeneratedInvoiceRequest
	8,  // 26: InvoiceGrpcService.PayInvoice:input_type -> PayInvoiceRequest
	10, // 27: InvoiceGrpcService.SimulateInvoice:input_type -> SimulateInvoiceRequest
	12, // 28: InvoiceGrpcService.UpdateInvoice:input_type -> UpdateInvoiceRequest
	13, // 29: InvoiceGrpcService.PayInvoiceNotification:input_type -> PayInvoiceNotificationRequest
	14, // 30: InvoiceGrpcService.NewInvoiceForContract:output_type -> InvoiceIdResponse
	14, // 31: InvoiceGrpcService.FillInvoice:output_type -> InvoiceIdResponse
	14, // 32: InvoiceGrpcService.GenerateInvoicePdf:output_type -> InvoiceIdResponse
	14, // 33: InvoiceGrpcService.PdfGeneratedInvoice:output_type -> InvoiceIdResponse
	14, // 34: InvoiceGrpcService.PayInvoice:output_type -> InvoiceIdResponse
	14, // 35: InvoiceGrpcService.SimulateInvoice:output_type -> InvoiceIdResponse
	14, // 36: InvoiceGrpcService.UpdateInvoice:output_type -> InvoiceIdResponse
	14, // 37: InvoiceGrpcService.PayInvoiceNotification:output_type -> InvoiceIdResponse
	30, // [30:38] is the sub-list for method output_type
	22, // [22:30] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_invoice_proto_init() }
func file_invoice_proto_init() {
	if File_invoice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_invoice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewInvoiceForContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FillInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FillInvoiceCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FillInvoiceProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateInvoicePdfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdfGeneratedInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimulateInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DryRunServiceLineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayInvoiceNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invoice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_invoice_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_invoice_proto_goTypes,
		DependencyIndexes: file_invoice_proto_depIdxs,
		EnumInfos:         file_invoice_proto_enumTypes,
		MessageInfos:      file_invoice_proto_msgTypes,
	}.Build()
	File_invoice_proto = out.File
	file_invoice_proto_rawDesc = nil
	file_invoice_proto_goTypes = nil
	file_invoice_proto_depIdxs = nil
}
