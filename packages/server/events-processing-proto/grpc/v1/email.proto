syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "common/source.proto";

option go_package = "api/grpc/v1/email;email_grpc_service";

message UpsertEmailGrpcRequest {
  string tenant = 1;
  string rawEmail = 2;
  string appSource = 3 [deprecated = true];
  string source = 4 [deprecated = true];
  string sourceOfTruth = 5 [deprecated = true];
  google.protobuf.Timestamp  createdAt = 6;
  google.protobuf.Timestamp  updatedAt = 7;
  string id = 8;
  string loggedInUserId = 9;
  SourceFields sourceFields = 10;
}

message FailEmailValidationGrpcRequest {
  string tenant = 1;
  string emailId = 2;
  string errorMessage = 3;
  string appSource = 4;
  string loggedInUserId = 5;
  string rawEmail = 6;
}

message PassEmailValidationGrpcRequest {
  string tenant = 1;
  string emailId = 2;
  string appSource = 3;
  string loggedInUserId = 4;
  string rawEmail = 5;
  string isReachable = 6;
  string errorMessage = 7;
  string domain = 8;
  string username = 9;
  string email = 10;
  bool acceptsMail = 11;
  bool canConnectSmtp = 12;
  bool hasFullInbox = 13;
  bool isCatchAll = 14;
  bool isDisabled = 15;
  bool isValidSyntax = 16;
}

message RequestEmailValidationGrpcRequest {
  string id = 1;
  string tenant = 2;
  string appSource = 3;
  string loggedInUserId = 4;
}

message EmailIdGrpcResponse {
  string id = 1;
}

service emailGrpcService {
  rpc UpsertEmail(UpsertEmailGrpcRequest) returns (EmailIdGrpcResponse);
  rpc FailEmailValidation(FailEmailValidationGrpcRequest) returns (EmailIdGrpcResponse);
  rpc PassEmailValidation(PassEmailValidationGrpcRequest) returns (EmailIdGrpcResponse);
  rpc RequestEmailValidation(RequestEmailValidationGrpcRequest) returns (EmailIdGrpcResponse);
}
