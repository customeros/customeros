syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "common/source.proto";

option go_package = "api/grpc/v1/email;email_grpc_service";

message UpsertEmailRequest {
  string tenant = 1;
  string emailId = 2;
  string loggedInUserId = 3;
  string rawEmail = 4;
  google.protobuf.Timestamp  createdAt = 5;
  SourceFields sourceFields = 6;
}

message DeleteEmailRequest {
  string tenant = 1;
  string emailId = 2;
  string loggedInUserId = 3;
  string appSource = 4;
}

message EmailValidationGrpcRequest {
  string tenant = 1;
  string emailId = 2;
  string appSource = 3;
  string loggedInUserId = 4;
  string rawEmail = 5;
  string email = 6;
  string domain = 7;
  string username = 8;
  bool isValidSyntax = 9;
  bool isRisky = 10;
  bool isFirewalled = 11;
  string Provider = 12;
  string Firewall = 13;
  bool isCatchAll = 14;
  bool isDeliverable = 16;
  bool isMailboxFull = 17;
  bool isRoleAccount = 18;
  bool isFreeAccount = 19;
  bool smtpSuccess = 20;
  string responseCode = 21;
  string errorCode = 22;
  string description = 23;
  string deliverable = 25;
  bool isPrimaryDomain = 26;
  string primaryDomain = 27;
  string alternateEmail = 28;
  bool retryValidation = 29;
}

message RequestEmailValidationGrpcRequest {
  string id = 1;
  string tenant = 2;
  string appSource = 3;
  string loggedInUserId = 4;
}

message EmailIdGrpcResponse {
  string id = 1;
}

service emailGrpcService {
  rpc UpsertEmailV2(UpsertEmailRequest) returns (EmailIdGrpcResponse);
  rpc RequestEmailValidation(RequestEmailValidationGrpcRequest) returns (EmailIdGrpcResponse);
  rpc UpdateEmailValidation(EmailValidationGrpcRequest) returns (EmailIdGrpcResponse);
  rpc DeleteEmail(DeleteEmailRequest) returns (EmailIdGrpcResponse);
}
