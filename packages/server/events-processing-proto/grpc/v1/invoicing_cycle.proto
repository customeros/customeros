syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "common/source.proto";

option go_package = "api/grpc/v1/invoicing_cycle;invoicing_cycle_grpc_service";

enum InvoicingDateType {
  DATE = 0;
  ANNIVERSARY = 1;
}

message CreateInvoicingCycleTypeRequest {
  string tenant = 1;
  string loggedInUserId = 2;
  InvoicingDateType type = 3;
  google.protobuf.Timestamp createdAt = 4;
  SourceFields sourceFields = 5;
}
message UpdateInvoicingCycleTypeRequest {
  string invoicingCycleTypeId = 1;
  string tenant = 2;
  string loggedInUserId = 3;
  InvoicingDateType type = 4;
  google.protobuf.Timestamp updatedAt = 5;
  SourceFields appSource = 6;
}


enum BillingDateType {
  MONTHLY = 0;
  QUARTERLY = 1;
  ANNUALLY = 2;
}

message CreateInvoicingCycleDayRequest {
  string tenant = 1;
  string loggedInUserId = 2;
  BillingDateType type = 3;
  google.protobuf.Timestamp createdAt = 4;
  SourceFields sourceFields = 5;
}

message UpdateInvoicingCycleDayRequest {
  string invoicingCycleDayRequestId = 1;
  string tenant = 2;
  string loggedInUserId = 3;
  BillingDateType type = 4;
  google.protobuf.Timestamp createdAt = 5;
  SourceFields sourceFields = 6;
}

message InvoicingCycleTypeResponse {
  string id = 1;
}

message InvoicingCycleDayResponse {
  string id = 1;
}

// Service definition
service InvoicingCycleService {
  rpc CreateInvoicingCycleType(CreateInvoicingCycleTypeRequest) returns (InvoicingCycleTypeResponse);
  rpc UpdateInvoicingCycleType(UpdateInvoicingCycleTypeRequest) returns (InvoicingCycleTypeResponse);
  rpc CreateInvoicingCycleDay(CreateInvoicingCycleDayRequest) returns (InvoicingCycleDayResponse);
  rpc UpdateInvoicingCycleDay(UpdateInvoicingCycleDayRequest) returns (InvoicingCycleDayResponse);
}