extend type Mutation {
    emailMergeToContact(contactId : ID!, input: EmailInput!): Email!
    emailUpdateInContact(contactId : ID!, input: EmailUpdateInput!): Email!
    emailRemoveFromContact(contactId : ID!, email: String!): Result!
    emailRemoveFromContactById(contactId : ID!, id: ID!): Result!

    emailMergeToUser(userId : ID!, input: EmailInput!): Email!
    emailUpdateInUser(userId : ID!, input: EmailUpdateInput!): Email!
    emailRemoveFromUserById(userId : ID!, id: ID!): Result!
}

"""
Describes an email address associated with a `Contact` in customerOS.
**A `return` object.**
"""
type Email {
    
    """
    The unique ID associated with the contact in customerOS. 
    **Required**
    """
    id: ID!

    """
    An email address assocaited with the contact in customerOS.
    **Required.**
    """
    email: String!

    """
    Describes the type of email address (WORK, PERSONAL, etc).
    """
    label: EmailLabel

    """
    Identifies whether the email address is primary or not.
    **Required.**
    """
    primary: Boolean!

    source: DataSource!

    sourceOfTruth: DataSource!

    appSource: String!

    createdAt: Time!

    updatedAt: Time!
}

"""
Describes an email address associated with a `Contact` in customerOS.
**A `create` object.**
"""
input EmailInput {
    
    """
    An email address assocaited with the contact in customerOS.
    **Required.**
    """
    email: String!

    """
    Describes the type of email address (WORK, PERSONAL, etc).
    """
    label: EmailLabel

    """
    Identifies whether the email address is primary or not.
    **Required.**
    """
    primary: Boolean

    appSource: String
}

"""
Describes an email address associated with a `Contact` in customerOS.
**An `update` object.**
"""
input EmailUpdateInput {
    
    """
    An email address assocaited with the contact in customerOS.
    **Required.**
    """
    id: ID!

    """
    An email address assocaited with the contact in customerOS.
    **Required.**
    """
    email: String!

    """
    Describes the type of email address (WORK, PERSONAL, etc).
    """
    label: EmailLabel

    """
    Identifies whether the email address is primary or not.
    **Required.**
    """
    primary: Boolean
}


"""
Describes the type of email address (WORK, PERSONAL, etc).
**A `return` object.
"""
enum EmailLabel {
    MAIN
    WORK
    HOME
    OTHER
}
