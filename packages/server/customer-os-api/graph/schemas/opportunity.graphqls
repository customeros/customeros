extend type Query {
    opportunity(id: ID!): Opportunity @hasRole(roles: [ADMIN, USER]) @hasTenant
    opportunities_LinkedToOrganizations(pagination: Pagination): OpportunityPage! @hasRole(roles: [ADMIN, USER]) @hasTenant
}
extend type Mutation {
    opportunity_Save(input: OpportunitySaveInput!): Opportunity! @hasRole(roles: [ADMIN, USER]) @hasTenant
    opportunity_Archive(id: ID!): ActionResponse! @hasRole(roles: [ADMIN, USER]) @hasTenant

    #TODO these are not used on UI AT ALL
    opportunity_CloseWon(opportunityId: ID!): ActionResponse! @hasRole(roles: [ADMIN, USER]) @hasTenant
    opportunity_CloseLost(opportunityId: ID!): ActionResponse! @hasRole(roles: [ADMIN, USER]) @hasTenant

    opportunityRenewalUpdate(input: OpportunityRenewalUpdateInput!, ownerUserId: ID): Opportunity!
    opportunityRenewal_UpdateAllForOrganization(input: OpportunityRenewalUpdateAllForOrganizationInput!): Organization!

    #TODO: Remove these after UI migration
    opportunity_Create(input: OpportunityCreateInput!): Opportunity! @hasRole(roles: [ADMIN, USER]) @hasTenant #Deprecated
    opportunity_Update(input: OpportunityUpdateInput!): Opportunity! @hasRole(roles: [ADMIN, USER]) @hasTenant #Deprecated
    opportunity_SetOwner(opportunityId: ID!, userId: ID!): ActionResponse! @hasRole(roles: [ADMIN, USER]) @hasTenant #Deprecated
    opportunity_RemoveOwner(opportunityId: ID!): ActionResponse! @hasRole(roles: [ADMIN, USER]) @hasTenant #Deprecated
}

type Opportunity implements MetadataInterface {
    metadata:           Metadata!
    name:               String!
    amount:             Float!
    maxAmount:          Float!
    currency:           Currency
    likelihoodRate:     Int64!
    internalType:       InternalType!
    externalType:       String!
    internalStage:      InternalStage!
    externalStage:      String!
    estimatedClosedAt:  Time
    generalNotes:       String!
    nextSteps:          String!
    renewedAt:          Time
    renewalApproved:    Boolean!
    renewalLikelihood:  OpportunityRenewalLikelihood!
    renewalUpdatedByUserId: String!
    renewalUpdatedByUserAt: Time
    renewalAdjustedRate:    Int64!
    comments:           String!
    stageLastUpdated:   Time
    organization:       Organization @goField(forceResolver: true) @hasRole(roles: [ADMIN, USER]) @hasTenant
    createdBy:          User @goField(forceResolver: true) @hasRole(roles: [ADMIN, USER]) @hasTenant
    owner:              User @goField(forceResolver: true) @hasRole(roles: [ADMIN, USER]) @hasTenant
    externalLinks:      [ExternalSystem!]! @goField(forceResolver: true) @hasRole(roles: [ADMIN, USER]) @hasTenant

    """
    Deprecated, use metadata
    """
    id:                 ID!
    """
    Deprecated, use metadata
    """
    createdAt:          Time
    """
    Deprecated, use metadata
    """
    updatedAt:          Time
    """
    Deprecated, use metadata
    """
    source:             DataSource
    """
    Deprecated, use metadata
    """
    sourceOfTruth:      DataSource
    """
    Deprecated, use metadata
    """
    appSource:          String
}

type OpportunityPage implements Pages {
    content: [Opportunity!]!
    totalPages: Int!
    totalElements: Int64!
    totalAvailable: Int64!
}

enum InternalType {
    NBO
    UPSELL
    CROSS_SELL
    RENEWAL
}

enum InternalStage {
    OPEN
    CLOSED_WON
    CLOSED_LOST
}

enum OpportunityRenewalLikelihood {
    HIGH_RENEWAL
    MEDIUM_RENEWAL
    LOW_RENEWAL
    ZERO_RENEWAL
}

input OpportunityRenewalUpdateInput {
    opportunityId:          ID!
    amount:                 Float
    comments:               String
    appSource:              String
    ownerUserId:            ID
    renewalLikelihood:      OpportunityRenewalLikelihood
    renewalAdjustedRate:    Int64
    """
    Deprecated
    """
    name:                   String @deprecated(reason: "Not used")
}

input OpportunityCreateInput {
    organizationId:      ID!
    name:                String
    internalType:        InternalType
    externalType:        String
    externalStage:       String
    estimatedClosedDate: Time
    generalNotes:        String
    nextSteps:           String
    comments:            String
    maxAmount:           Float
    currency:            Currency
    likelihoodRate:      Int64
}

input OpportunityUpdateInput {
    opportunityId:       ID!
    name:                String
    amount:              Float
    internalStage:       InternalStage
    externalType:        String
    externalStage:       String
    estimatedClosedDate: Time
    nextSteps:           String
    likelihoodRate:      Int64
    maxAmount:           Float
    currency:            Currency
}

input OpportunitySaveInput {
    organizationId:      ID
    opportunityId:       ID

    name:                String
    amount:              Float
    internalType:        InternalType
    internalStage:       InternalStage
    externalType:        String
    externalStage:       String
    estimatedClosedDate: Time
    nextSteps:           String
    likelihoodRate:      Int64
    maxAmount:           Float
    currency:            Currency

    ownerId:             ID
}

input OpportunityRenewalUpdateAllForOrganizationInput {
    organizationId:         ID!
    renewalLikelihood:      OpportunityRenewalLikelihood
    renewalAdjustedRate:    Int64
}