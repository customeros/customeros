extend type Query {
    tableViewDefs: [TableViewDef!]! @hasRole(roles: [ADMIN, USER]) @hasTenant
}

extend type Mutation {
    tableViewDef_Update(input: TableViewDefInput!): TableViewDef! @hasRole(roles: [ADMIN, USER]) @hasTenant
}

type TableViewDef implements Node {
    id:                 ID!
    name:               String!
    tableType:          TableViewType
    order:              Int
    icon:               String
    columns:            [ColumnType!]!
    filters:            String
    sorting:            String
    createdAt:          Time!
    updatedAt:          Time!
}

enum TableViewType {
    ORGANIZATIONS
    INVOICES
    RENEWALS
}

enum ColumnType {
    INVOICES_ISSUE_DATE
    INVOICES_ISSUE_DATE_PAST
    INVOICES_DUE_DATE
    INVOICES_CONTRACT
    INVOICES_BILLING_CYCLE
    INVOICES_PAYMENT_STATUS
    INVOICES_INVOICE_NUMBER
    INVOICES_AMOUNT
    INVOICES_INVOICE_STATUS
    INVOICES_INVOICE_PREVIEW

    ORGANIZATIONS_AVATAR
    ORGANIZATIONS_NAME
    ORGANIZATIONS_WEBSITE
    ORGANIZATIONS_RELATIONSHIP
    ORGANIZATIONS_ONBOARDING_STATUS
    ORGANIZATIONS_RENEWAL_LIKELIHOOD
    ORGANIZATIONS_RENEWL_DATE
    ORGANIZATIONS_FORECAST_ARR
    ORGANIZATIONS_OWNER
    ORGANIZATIONS_LAST_TOUCHPOINT

    RENEWALS_AVATAR
    RENEWALS_NAME
    RENEWALS_RENEWAL_LIKELIHOOD
    RENEWALS_RENEWL_DATE
    RENEWALS_FORECAST_ARR
    RENEWALS_OWNER
    RENEWALS_LAST_TOUCHPOINT
}

input TableViewDefInput {
    id:                 ID!
    name:               String!
    order:              Int!
    icon:               String
    columns:            [ColumnType!]!
    filters:            String!
    sorting:            String!
}