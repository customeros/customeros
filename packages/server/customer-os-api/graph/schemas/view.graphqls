extend type Query {
    tableViewDefs: [TableViewDef!]! @hasRole(roles: [ADMIN, USER]) @hasTenant
}

extend type Mutation {
    tableViewDef_Create(input: TableViewDefCreateInput!): TableViewDef!
        @hasRole(roles: [ADMIN, USER])
        @hasTenant
    tableViewDef_Update(input: TableViewDefUpdateInput!): TableViewDef!
        @hasRole(roles: [ADMIN, USER])
        @hasTenant
    tableViewDef_UpdateShared(input: TableViewDefUpdateInput!): TableViewDef!
        @hasRole(roles: [ADMIN, USER])
        @hasTenant
    tableViewDef_Archive(id: ID!): ActionResponse!
        @hasRole(roles: [ADMIN, USER])
        @hasTenant
}

type TableViewDef implements Node {
    id: ID!
    name: String!
    tableType: TableViewType!
    tableId: TableIdType!
    order: Int!
    icon: String!
    columns: [ColumnView!]!
    filters: String!
    sorting: String!
    isPreset: Boolean!
    isShared: Boolean!
    createdAt: Time!
    updatedAt: Time!
}

type ColumnView {
    columnId: Int!
    columnType: ColumnViewType!
    width: Int!
    visible: Boolean!
    name: String!
    filter: String!
}

enum TableViewType {
    ORGANIZATIONS
    INVOICES
    CONTACTS
    OPPORTUNITIES
    CONTRACTS
    FLOW
}

enum TableIdType {
    ORGANIZATIONS
    CUSTOMERS
    TARGETS
    UPCOMING_INVOICES
    PAST_INVOICES
    CONTACTS
    CONTACTS_FOR_TARGET_ORGANIZATIONS
    OPPORTUNITIES
    OPPORTUNITIES_RECORDS
    CONTRACTS
    FLOW_ACTIONS
    FLOW_CONTACTS
}

enum ColumnViewType {
    INVOICES_ISSUE_DATE
    INVOICES_ISSUE_DATE_PAST
    INVOICES_DUE_DATE
    INVOICES_CONTRACT
    INVOICES_BILLING_CYCLE
    INVOICES_INVOICE_NUMBER
    INVOICES_AMOUNT
    INVOICES_INVOICE_STATUS
    INVOICES_INVOICE_PREVIEW
    INVOICES_ORGANIZATION

    ORGANIZATIONS_AVATAR
    ORGANIZATIONS_NAME
    ORGANIZATIONS_WEBSITE
    ORGANIZATIONS_RELATIONSHIP
    ORGANIZATIONS_ONBOARDING_STATUS
    ORGANIZATIONS_RENEWAL_LIKELIHOOD
    ORGANIZATIONS_RENEWAL_DATE
    ORGANIZATIONS_FORECAST_ARR
    ORGANIZATIONS_OWNER
    ORGANIZATIONS_LAST_TOUCHPOINT
    ORGANIZATIONS_LAST_TOUCHPOINT_DATE
    ORGANIZATIONS_STAGE
    ORGANIZATIONS_CONTACT_COUNT
    ORGANIZATIONS_SOCIALS
    ORGANIZATIONS_LEAD_SOURCE
    ORGANIZATIONS_CREATED_DATE
    ORGANIZATIONS_EMPLOYEE_COUNT
    ORGANIZATIONS_YEAR_FOUNDED
    ORGANIZATIONS_INDUSTRY
    ORGANIZATIONS_CHURN_DATE
    ORGANIZATIONS_LTV
    ORGANIZATIONS_CITY
    ORGANIZATIONS_IS_PUBLIC
    ORGANIZATIONS_LINKEDIN_FOLLOWER_COUNT
    ORGANIZATIONS_TAGS
    ORGANIZATIONS_HEADQUARTERS
    ORGANIZATIONS_PARENT_ORGANIZATION

    CONTACTS_AVATAR
    CONTACTS_NAME
    CONTACTS_ORGANIZATION
    CONTACTS_EMAILS
    CONTACTS_PERSONAL_EMAILS
    CONTACTS_PRIMARY_EMAIL
    CONTACTS_PHONE_NUMBERS
    CONTACTS_LINKEDIN
    CONTACTS_CITY
    CONTACTS_PERSONA
    CONTACTS_LAST_INTERACTION
    CONTACTS_COUNTRY
    CONTACTS_REGION
    CONTACTS_SKILLS
    CONTACTS_SCHOOLS
    CONTACTS_LANGUAGES
    CONTACTS_TIME_IN_CURRENT_ROLE
    CONTACTS_EXPERIENCE
    CONTACTS_LINKEDIN_FOLLOWER_COUNT
    CONTACTS_JOB_TITLE
    CONTACTS_TAGS
    CONTACTS_CONNECTIONS
    CONTACTS_FLOWS
    CONTACTS_FLOW_STATUS
    CONTACTS_UPDATED_AT

    OPPORTUNITIES_COMMON_COLUMN
    OPPORTUNITIES_NAME
    OPPORTUNITIES_ORGANIZATION
    OPPORTUNITIES_STAGE
    OPPORTUNITIES_ESTIMATED_ARR
    OPPORTUNITIES_OWNER
    OPPORTUNITIES_TIME_IN_STAGE
    OPPORTUNITIES_CREATED_DATE
    OPPORTUNITIES_NEXT_STEP

    CONTRACTS_NAME
    CONTRACTS_ENDED
    CONTRACTS_PERIOD
    CONTRACTS_CURRENCY
    CONTRACTS_STATUS
    CONTRACTS_RENEWAL
    CONTRACTS_LTV
    CONTRACTS_RENEWAL_DATE
    CONTRACTS_FORECAST_ARR
    CONTRACTS_OWNER
    CONTRACTS_HEALTH

    FLOW_NAME
    FLOW_TOTAL_COUNT
    FLOW_PENDING_COUNT
    FLOW_COMPLETED_COUNT
    FLOW_GOAL_ACHIEVED_COUNT
    FLOW_STATUS
    FLOW_ACTION_NAME
    FLOW_ACTION_STATUS
}

input TableViewDefUpdateInput {
    id: ID!
    name: String!
    order: Int!
    icon: String!
    columns: [ColumnViewInput!]!
    filters: String!
    sorting: String!
}

input TableViewDefCreateInput {
    tableType: TableViewType!
    tableId: TableIdType!
    name: String!
    order: Int!
    icon: String!
    columns: [ColumnViewInput!]!
    filters: String!
    sorting: String!
    isPreset: Boolean!
    isShared: Boolean!
}

input ColumnViewInput {
    columnId: Int!
    columnType: ColumnViewType!
    width: Int!
    visible: Boolean!
    name: String!
    filter: String!
}
