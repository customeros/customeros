extend type Mutation {
    entityTemplate_Create(input: EntityTemplateInput!): EntityTemplate! @hasRole(roles: [ADMIN, USER]) @hasTenant
    entityTemplate_AddCustomFieldTemplate(entityTemplateId: ID!, customFieldTemplateId: ID!): EntityTemplate! @hasRole(roles: [ADMIN, USER]) @hasTenant
    entityTemplate_RemoveCustomFieldTemplate(entityTemplateId: ID!, customFieldTemplateId: ID!): EntityTemplate! @hasRole(roles: [ADMIN, USER]) @hasTenant
}

extend type Query {
    entityTemplates(extends: EntityTemplateExtension): [EntityTemplate!]! @hasRole(roles: [ADMIN, USER]) @hasTenant
}

enum EntityTemplateExtension {
    CONTACT
    ORGANIZATION
}

type EntityTemplate {
    id:             ID!
    name:           String!
    extends:        EntityTemplateExtension
    customFieldTemplates: [CustomFieldTemplate!]! @goField(forceResolver: true)
    created:        Time!
    lastUpdated:    Time!
    """
    Deprecated
    """
    fieldSetTemplates: [FieldSetTemplate!]! @goField(forceResolver: true)

}

type FieldSetTemplate  implements Node {
    id: ID!
    createdAt: Time!
    updatedAt: Time!
    name: String!
    order: Int!
    customFieldTemplates: [CustomFieldTemplate!]! @goField(forceResolver: true)
}

input EntityTemplateInput {
    name: String!
    extends: EntityTemplateExtension
    fieldSetTemplateInputs: [FieldSetTemplateInput!]
    customFieldTemplateInputs: [CustomFieldTemplateInput!]
}

input FieldSetTemplateInput {
    name: String!
    order: Int!
    customFieldTemplateInputs: [CustomFieldTemplateInput!]
}