union InteractionEventParticipant = EmailParticipant | PhoneNumberParticipant | ContactParticipant | UserParticipant | OrganizationParticipant | JobRoleParticipant
union InteractionSessionParticipant = EmailParticipant | PhoneNumberParticipant | ContactParticipant | UserParticipant

extend type Query {
    interactionEvent(id: ID!): InteractionEvent!
}

extend type Mutation {
    interactionEvent_LinkAttachment(eventId: ID!, attachmentId: ID!): Result!
}

type InteractionSession implements Node {
    id: ID!

    createdAt: Time!
    updatedAt: Time!

    identifier: String!
    name: String!
    status: String!
    type: String
    channel: String
    channelData: String
    source: DataSource!
    sourceOfTruth: DataSource!
    appSource: String!
    events: [InteractionEvent!]! @goField(forceResolver: true)
    attendedBy: [InteractionSessionParticipant!]! @goField(forceResolver: true)
}

type InteractionEvent implements Node {
    id: ID!
    createdAt: Time!

    customerOSInternalIdentifier: String
    eventIdentifier: String
    channel: String!
    content: String
    contentType: String
    channelData: String
    interactionSession: InteractionSession @goField(forceResolver: true)
    issue: Issue @goField(forceResolver: true)
    meeting: Meeting @goField(forceResolver: true)
    sentBy: [InteractionEventParticipant!]! @goField(forceResolver: true)
    sentTo: [InteractionEventParticipant!]! @goField(forceResolver: true)
    repliesTo: InteractionEvent @goField(forceResolver: true)
    includes: [Attachment!]! @goField(forceResolver: true)
    actions: [Action!] @goField(forceResolver: true)
    actionItems: [ActionItem!] @goField(forceResolver: true)
    source: DataSource!
    sourceOfTruth: DataSource!
    appSource: String!
    eventType: String
    externalLinks:  [ExternalSystem!]! @goField(forceResolver: true)
}

type EmailParticipant {
    emailParticipant: Email!
    type: String
}

type PhoneNumberParticipant {
    phoneNumberParticipant: PhoneNumber!
    type: String
}

type ContactParticipant {
    contactParticipant: Contact!
    type: String
}

type JobRoleParticipant {
    jobRoleParticipant: JobRole!
    type: String
}

type UserParticipant {
    userParticipant: User!
    type: String
}

type OrganizationParticipant {
    organizationParticipant: Organization!
    type: String
}