extend type Query {
    bankAccounts: [BankAccount!]! @hasRole(roles: [ADMIN, USER]) @hasTenant
}

extend type Mutation {
    bankAccount_Create(input: BankAccountCreateInput): BankAccount! @hasRole(roles: [ADMIN, USER]) @hasTenant
    bankAccount_Update(input: BankAccountUpdateInput): BankAccount! @hasRole(roles: [ADMIN, USER]) @hasTenant
    bankAccount_Delete(id: ID!): DeleteResponse! @hasRole(roles: [ADMIN, USER]) @hasTenant
}

type BankAccount implements MetadataInterface {
    metadata:               Metadata!
    bankName:               String
    currency:               Currency
    bankTransferEnabled:    Boolean!
    allowInternational:     Boolean!
    iban:                   String
    bic:                    String
    sortCode:               String
    accountNumber:          String
    routingNumber:          String
    otherDetails:           String
}

input BankAccountCreateInput {
    currency:               Currency
    bankName:               String
    bankTransferEnabled:    Boolean
    allowInternational:     Boolean
    iban:                   String
    bic:                    String
    sortCode:               String
    accountNumber:          String
    routingNumber:          String
    otherDetails:           String
}

input BankAccountUpdateInput {
    id:                     ID!
    currency:               Currency
    bankName:               String
    bankTransferEnabled:    Boolean
    allowInternational:     Boolean
    iban:                   String
    bic:                    String
    sortCode:               String
    accountNumber:          String
    routingNumber:          String
    otherDetails:           String
}