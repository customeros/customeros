extend type Query {
    """
    sort.By available options: ORGANIZATION, IS_CUSTOMER, DOMAIN, LOCATION, OWNER, LAST_TOUCHPOINT, FORECAST_AMOUNT, RENEWAL_LIKELIHOOD, RENEWAL_CYCLE_NEXT
    """
    dashboardView_Organizations(pagination: Pagination!, where: Filter, sort: SortBy): OrganizationPage

    dashboard_MRRPerCustomer(year: Int!): DashboardMRRPerCustomer
    dashboard_GrossRevenueRetention(year: Int!): DashboardGrossRevenueRetention
    dashboard_ARRBreakdown(year: Int!): DashboardARRBreakdown
    dashboard_RevenueAtRisk(year: Int!): DashboardRevenueAtRisk
    dashboard_RetentionRate(year: Int!): DashboardRetentionRate
    dashboard_NewCustomers(year: Int!): DashboardNewCustomers
}

type DashboardMRRPerCustomer {
    mrrPerCustomer: Float!
    increasePercentage: Float!
    perMonth: [DashboardMRRPerCustomerPerMonth]!
}
type DashboardMRRPerCustomerPerMonth {
    month: Int!
    value: Int!
}

type DashboardGrossRevenueRetention {
    grossRevenueRetention: Float!
    increasePercentage: Float!
    perMonth: [DashboardGrossRevenueRetentionPerMonth]!
}
type DashboardGrossRevenueRetentionPerMonth {
    month: Int!
    percentage: Float!
}

type DashboardARRBreakdown {
    arrBreakdown: Float!
    increasePercentage: Float!
    perMonth: [DashboardARRBreakdownPerMonth]!
}
type DashboardARRBreakdownPerMonth {
    month: Int!
    newlyContracted: Int!
    renewals: Int!
    upsells: Int!
    downgrades: Int!
    cancellations: Int!
    churned: Int!
}

type DashboardRevenueAtRisk {
    highConfidence: Float!
    atRisk: Float!
}

type DashboardRetentionRate {
    retentionRate: Int!
    increasePercentage: Float!
    perMonth: [DashboardRetentionRatePerMonth]!
}
type DashboardRetentionRatePerMonth {
    month: Int!
    renewCount: Int!
    churnCount: Int!
}

type DashboardNewCustomers {
    thisMonthCount: Int!
    thisMonthIncreasePercentage: Float!
    perMonth: [DashboardNewCustomersPerMonth]!
}
type DashboardNewCustomersPerMonth {
    month: Int!
    count: Int!
}