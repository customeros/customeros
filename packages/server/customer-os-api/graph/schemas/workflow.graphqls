extend type Query {
    workflow_ByType(workflowType: WorkflowType!): Workflow! @hasRole(roles: [ADMIN, USER]) @hasTenant
    workflows: [Workflow!]! @hasRole(roles: [ADMIN, USER]) @hasTenant
}

extend type Mutation {
    workflow_Update(input: WorkflowUpdateInput!): ActionResponse! @hasRole(roles: [ADMIN, USER]) @hasTenant
}

type Workflow implements Node {
    id:         ID!
    name:       String
    type:       WorkflowType!
    live:       Boolean!
    condition:  String!
}

enum WorkflowType {
    IDEAL_CUSTOMER_PROFILE
    IDEAL_CONTACT_PERSONA
}

input WorkflowUpdateInput {
    id:         ID!
    name:       String
    live:       Boolean
    condition:  String
}