package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/99designs/gqlgen/graphql"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api/graph/model"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api/tracing"
)

// TableViewDefUpdate is the resolver for the tableViewDef_Update field.
func (r *mutationResolver) TableViewDefUpdate(ctx context.Context, input model.TableViewDefInput) (*model.TableViewDef, error) {
	panic(fmt.Errorf("not implemented: TableViewDefUpdate - tableViewDef_Update"))
}

// TableViewDefs is the resolver for the tableViewDefs field.
func (r *queryResolver) TableViewDefs(ctx context.Context) ([]*model.TableViewDef, error) {
	ctx, span := tracing.StartGraphQLTracerSpan(ctx, "QueryResolver.TableViewDefs", graphql.GetOperationContext(ctx))
	defer span.Finish()
	tracing.SetDefaultResolverSpanTags(ctx, span)

	return nil, nil
}
