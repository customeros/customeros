package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api/graph/model"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api/mapper"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api/tracing"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-common-module/utils"
	"github.com/opentracing/opentracing-go/log"
)

// CustomFieldTemplateSave is the resolver for the customFieldTemplate_Save field.
func (r *mutationResolver) CustomFieldTemplateSave(ctx context.Context, input model.CustomFieldTemplateInput) (*model.CustomFieldTemplate, error) {
	ctx, span := tracing.StartGraphQLTracerSpan(ctx, "QueryResolver.CustomFieldTemplateSave", graphql.GetOperationContext(ctx))
	defer span.Finish()
	tracing.SetDefaultResolverSpanTags(ctx, span)
	tracing.LogObjectAsJson(span, "request.input", input)

	customFieldTemplateId, err := r.Services.CommonServices.CustomFieldTemplateService.Save(ctx, input.ID, mapper.MapCustomFieldTemplateInputToSaveFields(input))
	if err != nil {
		tracing.TraceErr(span, err)
		graphql.AddErrorf(ctx, "error saving custom field template")
		return nil, nil
	}

	customFieldTemplateEntity, err := r.Services.CommonServices.CustomFieldTemplateService.GetById(ctx, customFieldTemplateId)
	if err != nil {
		tracing.TraceErr(span, err)
		graphql.AddErrorf(ctx, "error getting custom field template")
		return nil, nil
	}

	return mapper.MapEntityToCustomFieldTemplate(customFieldTemplateEntity), nil
}

// CustomFieldTemplateDelete is the resolver for the customFieldTemplate_Delete field.
func (r *mutationResolver) CustomFieldTemplateDelete(ctx context.Context, id string) (*bool, error) {
	ctx, span := tracing.StartGraphQLTracerSpan(ctx, "MutationResolver.CustomFieldTemplateDelete", graphql.GetOperationContext(ctx))
	defer span.Finish()
	tracing.SetDefaultResolverSpanTags(ctx, span)
	span.LogFields(log.String("request.id", id))

	err := r.Services.CommonServices.CustomFieldTemplateService.Delete(ctx, id)
	if err != nil {
		tracing.TraceErr(span, err)
		graphql.AddErrorf(ctx, "error deleting custom field template")
		return nil, nil
	}

	return utils.BoolPtr(true), nil
}

// CustomFieldTemplateList is the resolver for the customFieldTemplate_List field.
func (r *queryResolver) CustomFieldTemplateList(ctx context.Context) ([]*model.CustomFieldTemplate, error) {
	ctx, span := tracing.StartGraphQLTracerSpan(ctx, "QueryResolver.CustomFieldTemplateList", graphql.GetOperationContext(ctx))
	defer span.Finish()
	tracing.SetDefaultResolverSpanTags(ctx, span)

	entities, err := r.Services.CommonServices.CustomFieldTemplateService.GetAll(ctx)
	if err != nil {
		tracing.TraceErr(span, err)
		graphql.AddErrorf(ctx, "error getting custom field templates: %s", err.Error())
		return nil, nil
	}

	return mapper.MapEntitiesToCustomFieldTemplates(entities), nil
}
