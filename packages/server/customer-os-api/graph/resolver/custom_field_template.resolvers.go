package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"fmt"

	"github.com/99designs/gqlgen/graphql"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api/graph/model"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api/mapper"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api/tracing"
)

// CustomFieldTemplateSave is the resolver for the customFieldTemplate_Save field.
func (r *mutationResolver) CustomFieldTemplateSave(ctx context.Context, input model.CustomFieldTemplateInput) (*model.CustomFieldTemplate, error) {
	// TODO alexb implement
	panic(fmt.Errorf("not implemented: CustomFieldTemplateSave - customFieldTemplate_Save"))
}

// CustomFieldTemplateDelete is the resolver for the customFieldTemplate_Delete field.
func (r *mutationResolver) CustomFieldTemplateDelete(ctx context.Context, id string) (*bool, error) {
	ctx, span := tracing.StartGraphQLTracerSpan(ctx, "MutationResolver.CustomFieldTemplateDelete", graphql.GetOperationContext(ctx))
	defer span.Finish()
	tracing.SetDefaultResolverSpanTags(ctx, span)

	// TODO alexb implement
	graphql.AddErrorf(ctx, "not implemented yet")
	return nil, nil
}

// CustomFieldTemplateList is the resolver for the customFieldTemplate_List field.
func (r *queryResolver) CustomFieldTemplateList(ctx context.Context) ([]*model.CustomFieldTemplate, error) {
	ctx, span := tracing.StartGraphQLTracerSpan(ctx, "QueryResolver.CustomFieldTemplateList", graphql.GetOperationContext(ctx))
	defer span.Finish()
	tracing.SetDefaultResolverSpanTags(ctx, span)

	entities, err := r.Services.CommonServices.CustomFieldTemplateService.GetAll(ctx)
	if err != nil {
		tracing.TraceErr(span, err)
		graphql.AddErrorf(ctx, "error getting custom field templates: %s", err.Error())
		return nil, err
	}

	return mapper.MapEntitiesToCustomFieldTemplates(entities), nil
}
