package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"fmt"

	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api-sdk/graph/generated"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api-sdk/graph/model"
)

// OpportunityCreate is the resolver for the opportunity_Create field.
func (r *mutationResolver) OpportunityCreate(ctx context.Context, input model.OpportunityCreateInput) (*model.Opportunity, error) {
	panic(fmt.Errorf("not implemented: OpportunityCreate - opportunity_Create"))
}

// OpportunityUpdate is the resolver for the opportunityUpdate field.
func (r *mutationResolver) OpportunityUpdate(ctx context.Context, input model.OpportunityUpdateInput) (*model.Opportunity, error) {
	panic(fmt.Errorf("not implemented: OpportunityUpdate - opportunityUpdate"))
}

// OpportunityCloseWon is the resolver for the opportunity_CloseWon field.
func (r *mutationResolver) OpportunityCloseWon(ctx context.Context, opportunityID string) (*model.ActionResponse, error) {
	panic(fmt.Errorf("not implemented: OpportunityCloseWon - opportunity_CloseWon"))
}

// OpportunityCloseLost is the resolver for the opportunity_CloseLost field.
func (r *mutationResolver) OpportunityCloseLost(ctx context.Context, opportunityID string) (*model.ActionResponse, error) {
	panic(fmt.Errorf("not implemented: OpportunityCloseLost - opportunity_CloseLost"))
}

// OpportunityRenewalUpdate is the resolver for the opportunityRenewalUpdate field.
func (r *mutationResolver) OpportunityRenewalUpdate(ctx context.Context, input model.OpportunityRenewalUpdateInput, ownerUserID *string) (*model.Opportunity, error) {
	panic(fmt.Errorf("not implemented: OpportunityRenewalUpdate - opportunityRenewalUpdate"))
}

// OpportunityRenewalUpdateAllForOrganization is the resolver for the opportunityRenewal_UpdateAllForOrganization field.
func (r *mutationResolver) OpportunityRenewalUpdateAllForOrganization(ctx context.Context, input model.OpportunityRenewalUpdateAllForOrganizationInput) (*model.Organization, error) {
	panic(fmt.Errorf("not implemented: OpportunityRenewalUpdateAllForOrganization - opportunityRenewal_UpdateAllForOrganization"))
}

// Organization is the resolver for the organization field.
func (r *opportunityResolver) Organization(ctx context.Context, obj *model.Opportunity) (*model.Organization, error) {
	panic(fmt.Errorf("not implemented: Organization - organization"))
}

// CreatedBy is the resolver for the createdBy field.
func (r *opportunityResolver) CreatedBy(ctx context.Context, obj *model.Opportunity) (*model.User, error) {
	panic(fmt.Errorf("not implemented: CreatedBy - createdBy"))
}

// Owner is the resolver for the owner field.
func (r *opportunityResolver) Owner(ctx context.Context, obj *model.Opportunity) (*model.User, error) {
	panic(fmt.Errorf("not implemented: Owner - owner"))
}

// ExternalLinks is the resolver for the externalLinks field.
func (r *opportunityResolver) ExternalLinks(ctx context.Context, obj *model.Opportunity) ([]*model.ExternalSystem, error) {
	panic(fmt.Errorf("not implemented: ExternalLinks - externalLinks"))
}

// Opportunity is the resolver for the opportunity field.
func (r *queryResolver) Opportunity(ctx context.Context, id string) (*model.Opportunity, error) {
	panic(fmt.Errorf("not implemented: Opportunity - opportunity"))
}

// OpportunitiesLinkedToOrganizations is the resolver for the opportunities_LinkedToOrganizations field.
func (r *queryResolver) OpportunitiesLinkedToOrganizations(ctx context.Context, pagination *model.Pagination) (*model.OpportunityPage, error) {
	panic(fmt.Errorf("not implemented: OpportunitiesLinkedToOrganizations - opportunities_LinkedToOrganizations"))
}

// Opportunity returns generated.OpportunityResolver implementation.
func (r *Resolver) Opportunity() generated.OpportunityResolver { return &opportunityResolver{r} }

type opportunityResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *queryResolver) OpportunitiesLinkedToOrganization(ctx context.Context, pagination *model.Pagination) (*model.OpportunityPage, error) {
	panic(fmt.Errorf("not implemented: OpportunitiesLinkedToOrganization - opportunities_LinkedToOrganization"))
}
