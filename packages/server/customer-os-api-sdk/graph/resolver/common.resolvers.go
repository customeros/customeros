package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api-sdk/graph/generated"
	"github.com/openline-ai/openline-customer-os/packages/server/customer-os-api-sdk/graph/model"
)

// AddTag is the resolver for the addTag field.
func (r *mutationResolver) AddTag(ctx context.Context, input model.AddTagInput) (string, error) {
	panic(fmt.Errorf("not implemented: AddTag - addTag"))
}

// RemoveTag is the resolver for the removeTag field.
func (r *mutationResolver) RemoveTag(ctx context.Context, input model.RemoveTagInput) (*model.Result, error) {
	panic(fmt.Errorf("not implemented: RemoveTag - removeTag"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
