[
  {
    "speaker": "A",
    "text": " Um, yeah, so, so I think, so we've got the identity. So fundamentally we have Jambones, right? We can receive a call and we can deliver it to a team's instance. So if we choose that, say, let's say that like the call can be sent to teams as the agent flow. We've got that end. We've got the received end piece. So we've got the start of the call. What we, we, what we just put in, what Alex has just put in is the HubSpot identify piece. So that's a fairly straightforward. Do they exist? Don't they exist? If they don't exist, do this. If they do exist, do this. Um, and we can route, uh, I know Node-RED can do that. If like, um, or this or this, you know, if this do this, if this do this. Um, so that's fundamentally, we've already kind of got the identity bit done to a very, not to the level that's within those blocks, but yeah. We can match to it, but we don't have like say national to E164, E164 to national matching or things like that. But, um, that's kind of straightforward. Then the authentication bit. So, um, that's, that's a bit more complex, um, but that's, that is a Twilio flow. What's the straight.",
    "start": 497.81199999999995
  },
  {
    "speaker": "B",
    "text": " Let me stop you for a second. What's that authentication bit?",
    "start": 70444.688
  },
  {
    "speaker": "A",
    "text": " So that's proving that the user who's calling is, is in ownership of that device. So if I call up on my phone, right. I call up on my phone. It will authorize. The reason it will authorize is I've had my number on this phone on this particular handset for two years on the, um.",
    "start": 75726.562
  },
  {
    "speaker": "C",
    "text": " pull up on my. Okay.",
    "start": 82982.81199999999
  },
  {
    "speaker": "A",
    "text": " If however, I'd say I'd recently ported my number from my current provider, which is EE to Vodafone. It would register as recently ported not authorized. I would say we don't trust this phone because you just ported the number. We don't know if like if I ported it yesterday, right? And that means I could be subject to a port attack. Then they could also double check. Okay, when we've identified, you said that this phone call is from John T. Knox, but the MNO record, so when I go and dip into the telephone network, which is what these identity providers do, they go, the owner of record of this mobile number is actually Alex Basarab. This doesn't make sense, right? This is not authorized because the user that we think it is, is not the user that the MNO says that it is. So we can't authorize this. And then in which case we'd mark it as not authorized. And when we handle the call flow, rather than going the happy path, which is get them to the person or the solution they need to as fast as they can, we put them in touch with a person who can ask them some additional questions, right? Like can do the standard bank thing, right? Like, can you tell us, you know, the third and fifth digit of your pin code? Can you tell us, you know, your mother's maiden name, blah, blah, blah, blah, blah. Once they do that, then they go back into the happy path. The operator then and there helps them with their problem. But the authentication is purely, this is just a bank level authentication that we can say, look, we can even authenticate you as a bank does for all of your users, which will reduce your fraud, which reduces stress on your call center and reduces the number of fraudulent cases and people trying to mess with your system because we're already calling them out to you as part of your workflow that you don't have already. Only banks really do this today. So this is like that part of that optimization flow is we're going to start calling out potentially bad actors as part of their call initiation. So, yeah, so we need to do all of that. Then as we go through all of this, we've got the very straightforward, you know, text to speech, like, you know, welcome to Acme Corp. Thanks for, you know, thanks for calling today. We're like, how can we help, blah, blah, blah. Then we go into the speech to text. And then this is the voice bot bit. So we can either do this using, we can do this using dialogue flow if we want. So there's already the dialogue flow set up within Node-RED and we can, and like, that'll be a little bit of fun as well for whoever wants to take that, because that's a nice little training AI voice bot thing that is useful to have those skills on the team anyway. Or we can go down a bit more, like the more complicated one is that the voice bot that I set up that couldn't really do anything because I didn't have a trained model where you can use AI to train a voice bot that will then talk to you like a normal person does, which is really creepy. But I think for the purposes of the demo, we should probably keep it straightforward and just use a dialogue flow piece. Or if there's something easier or similar, I mean, like for all intents and purposes, do the research, work out what you want to use. And then the idea is we can have a number of flows, some that are automated, which are like, what is my account balance as if it was a bank? Or, you know, is my flight still on time as if it was like an airline or a travel agency? Or I need to speak to an operator, which would put you through to a Teams agent or a queue, and then we can show, you know, like we can just put it straight through. For the purposes of the demo, we can put calls straight through to the agent or like a single agent or one or two or three agents like call Vazie, me or Matt or whoever. So that's fairly straightforward. Then there's a little, and then there's a hook on the hang up, which is the either work out how to put people back into the session or send the WhatsApp or send the email. So like, say if the hang up occurs earlier in the call, what do we do? And that this is where you were talking about that small app. Yeah.",
    "start": 96938.43800000001
  },
  {
    "speaker": "B",
    "text": " Yeah, so the HubSpot part, it's already there. The voiceboot, I don't know, someone would play with that one week, let's say, I don't know, one week to get a voiceboot with all those messages.",
    "start": 362584.688
  },
  {
    "speaker": "D",
    "text": " We did that before.",
    "start": 379459.688
  },
  {
    "speaker": "B",
    "text": " Yeah, but we have another thing. We need to start putting jumbos in production, actually real production with scaling and...",
    "start": 381704.063
  },
  {
    "speaker": "D",
    "text": " Those slides are doing it better.",
    "start": 391491.56299999997
  },
  {
    "speaker": "A",
    "text": " If we want, so this is, well, okay, so this is the ideal flow, Bazzi, right? Where we, if we're lighting up a dashboard with, you know, the reasonable amount of calls that we need, Jambones needs to be able to handle that many calls, but I, I think because PJ sit doesn't do media or we can opt out of doing media, then I think we can maybe do it with a single box. So.",
    "start": 394967.81299999997
  },
  {
    "speaker": "D",
    "text": " we do need a deployment of production of double expressor. So we need a production deployment, sorry guys. But I don't want to have to spend time on auto scaling and scaling of that deployment. We don't care about that. We're not targeting anymore customers that will use our production.",
    "start": 415994.06299999997
  },
  {
    "speaker": "A",
    "text": " Is this for the demo? If a single box works for the demo, that's fine. I think we put it later, right? Because we can do what Jamf Bones does right now. That's good enough for us to get the demo up and running. If we find when we go to demo, it just falls over. We go, okay, we need to set up auto scaling. And then we read all it. All it is a case of changing where we point calls at, right? Because we can use the same database. We can, well, actually no, the database is on the machine. We just have to stand up the data again. It's not too complicated.",
    "start": 441441.56299999997
  },
  {
    "speaker": "B",
    "text": " Okay, okay. So that means we're going to use our demo machine for now. We need to set up the voice boot. We need the Twilio authentication. And that small bit in the end to send emails or WhatsApp messages or something. Probably it will be a small application with three endpoints, send emails, send WhatsApp, send some other channels.",
    "start": 472154.063
  },
  {
    "speaker": "A",
    "text": " Yeah, like a chat chat basically. Yeah.",
    "start": 497567.813
  },
  {
    "speaker": "D",
    "text": " I would prefer to do that and once we have that working out, we go back to the... to improve a bit the general program, right?",
    "start": 500942.813
  },
  {
    "speaker": "B",
    "text": " Yeah, yeah, yeah, yeah.",
    "start": 509295.93799999997
  },
  {
    "speaker": "D",
    "text": " I would prefer honestly to go to the demo and say look this is our network, this is how it's deployed. Yeah, exactly.",
    "start": 510662.813
  },
  {
    "speaker": "B",
    "text": " Yeah, exactly. We are going to use that demo to actually speak with those power users that Matt was talking about.",
    "start": 517109.06299999997
  },
  {
    "speaker": "D",
    "text": " Yeah, the SPAR was used as usually the first one that we talked with. That's the thing, right? People don't care about the technical details, right?",
    "start": 527740.313
  },
  {
    "speaker": "D",
    "text": " The technical kids come in, we discuss contracts, we discuss... It's not even the letter of intent that they care about this, right? You're going to most probably the best... The most technical person that you're going to talk to is going to be a VP of something or... Okay. An architect, solution architect. Yeah. Good.",
    "start": 536785.313
  },
  {
    "speaker": "B",
    "text": " Yeah. In that case, Alex, I think we can split the work. So we need an application and we need to play with the voice board.",
    "start": 553727.813
  },
  {
    "speaker": "C",
    "text": " I can start with Twilio research. Okay, cool.",
    "start": 567750.938
  },
  {
    "speaker": "A",
    "text": " We should have an account for Twilio through the segment, through SendGrid. So we should just use that one. And I can apply for credits as well.",
    "start": 574349.063
  },
  {
    "speaker": "B",
    "text": " Jonti, for the voice booth, I think we're okay to use those messages that you wrote them in the presentation.",
    "start": 584153.437
  },
  {
    "speaker": "A",
    "text": " Yeah, yeah, yeah, just to start with, right? And if anything else where you'd be like, oh, this would be a cool demo thing to like endpoint, right? Use. The other thing that I was thinking about is synonyms, right? So if we can demo with exact phrasing, or like, if the word operator appears, right, send, you know, connect to operator. But if we want to say multiple things that are similar, I don't know what, again, I haven't looked into voice bots before. This is, this is new to me, is how we handle like, oh, can I please speak to someone is doesn't contain the word operator. Therefore, how do we how do we match that? But the intent is the same. So I'm sure people have solved this problem.",
    "start": 595122.187
  },
  {
    "speaker": "B",
    "text": " I think they have services, right? I would expect that Google would have a service to...",
    "start": 638372.813
  },
  {
    "speaker": "A",
    "text": " Yeah, to make the match intense, not just...",
    "start": 647215.3130000001
  },
  {
    "speaker": "B",
    "text": " It's not just like that. Okay, then I'll scan a little bit this.",
    "start": 649375.313
  },
  {
    "speaker": "A",
    "text": " Yeah, because the demo we stood up for the, you know, the speak friend demo, right, that was just looking for the word hello, or, you know, like friend, right. And then if there's a friend with a match above 50%, you know, do the next step in the call flow rather than repeat call loop.",
    "start": 652851.5619999999
  },
  {
    "speaker": "C",
    "text": " Eddie, what can we check as well is Amazon Connect. Next to Amazon Connect, there are a few services related to contact center. They have text-to-speech. They have speech-to-text. And they have some AI that they use for their call centers. And they also expose it as a service. So we can play also Amazon Notebook.",
    "start": 669304.6880000001
  },
  {
    "speaker": "A",
    "text": " We're mixing Twilio and Amazon Connect and HubSpot and all this kind of stuff. That's, that's, I think that's great.",
    "start": 693469.688
  },
  {
    "speaker": "A",
    "text": " Yeah, cool. So I'm just trying to think. Can we make sure that we document all of this in Jira? Because we need to start getting to this point where we're hyper-focused. I think the tickets will be important for doing this. Also, we need to start working on more to like a, because right now we're being Kanban, and everybody's been doing exactly what they need to be doing. But I think we need to start working towards, because we're a team now. We're going to have five developers soon, four developers at the end of the week. So I think we need to start, yeah, including that one. Quox one. Yeah, so that we can start keeping a tab on what everyone else is up to. And then we can also make sure that we hit deadlines together, right?",
    "start": 702632.8119999999
  },
  {
    "speaker": "D",
    "text": " Yeah, so we need to set up a piece of tech stand up something that we talk daily. Yeah. We need the board. So jointly work on the board. The point is to have all tickets on one board, even though they are not related, but we know everybody was working with. Well, let's not create different projects like network project or not network project or blah, blah projects. There's a board for this created.",
    "start": 753342.188
  },
  {
    "speaker": "A",
    "text": " right? Outcome based ethics. Like if we complete an ethic, we should be able to say that something fundamentally has changed. Yeah.",
    "start": 780730.3130000001
  },
  {
    "speaker": "D",
    "text": " Okay, so we start working like that, right? So everything that you work on from now on, there are free Apex created and I'm going to add more Apex today.",
    "start": 789184.6880000001
  },
  {
    "speaker": "D",
    "text": "... try to create tickets under those, right? And make sure they are on the board, and make sure we can discuss them in the morning. If you're blocked or not, or whatever, making progress or not.",
    "start": 800845.3130000001
  },
  {
    "speaker": "C",
    "text": " How mature should be our demo products? Let's say, how's the bot up? For example, I didn't put any security. So you can, from internet, you can call the API. If you know that you're not naming from number, it will give you the details.",
    "start": 813737.813
  },
  {
    "speaker": "D",
    "text": " We cannot do this because the moment we're going to start announcing public, that we're a public company, you're going to have bots indexing your website, right?",
    "start": 829026.563
  },
  {
    "speaker": "D",
    "text": " you're going to have automatic attacks towards all your APIs that have zero security. So we need to start... It's like we had this discussion that... This discussion was also on the YSeeds forum. You know, build your product as it's going to be used for production. So everything, every feature that you launch has to be fully automated, tested, has to be properly released, has to have proper security in place. Why? Because we don't want to come back in three months and redo this.",
    "start": 838932.188
  },
  {
    "speaker": "A",
    "text": " So that's the point, Node-RED is not secure, right? We need to set up...",
    "start": 871450.3130000001
  },
  {
    "speaker": "D",
    "text": " You need to go away from there or to add keys or start doing proper things, right?",
    "start": 877238.438
  },
  {
    "speaker": "A",
    "text": " doing proper things right? It's just a case of changing parameters and yeah yeah we make",
    "start": 880461.563
  },
  {
    "speaker": "B",
    "text": " Yeah, yeah, yeah, we need to put an authorization on that.",
    "start": 884680.313
  },
  {
    "speaker": "D",
    "text": " Let's start doing things properly. What I was saying is about the auto scaling and stuff like that scaling So the scalability thing. Yeah, we can tackle it later because it's usually something that takes you days to fine-tune, right?",
    "start": 888848.438
  },
  {
    "speaker": "D",
    "text": " in auto scale click here. Cool, add it, right? You idiot, add it if it's easy, right? But that's the only thing that I don't want to spend dry time right now is on that, like on scalability problems, because we won't have them any time soon. But security is the first thing that's going to be attacked. So the moment you have a public API, the moment we're going to go on LinkedIn, you're going to have 20 bots attacking the shit out of your API. Happened to Bugs Bunny also. A lot of times, we have stupid bots, right? The same for test automation and stuff like that. The moment we start writing code that actually does things, it's not just POC. So from now on, we're not talking concept anymore. We're building towards our MVP.",
    "start": 902601.5630000001
  },
  {
    "speaker": "D",
    "text": " This should be everything should be covered by test. Things should not be, if you change code, something should break, something should tell you that look, this is not working properly anymore.",
    "start": 951893.438
  },
  {
    "speaker": "D",
    "text": " What I want to avoid is situations like I saw that and hurt really bad, Ahuel, the CEO going to a demo, you know, on the production website, trying an action that was working before, a stupid action, like adding a configuration parameter, that's it, and the validation failed.",
    "start": 963554.0630000001
  },
  {
    "speaker": "D",
    "text": " Right. Like it sounds like a stupid bug for us, right? Okay. Yeah. It's just a form that has a bug, but for them is like good.",
    "start": 986672.813
  },
  {
    "speaker": "D",
    "text": " Yeah, but probably like server error because you added two values.",
    "start": 996662.8130000001
  },
  {
    "speaker": "D",
    "text": " Right? So what we show has to work properly, really, really well. I prefer to show less things that work really, really well.",
    "start": 1003885.313
  },
  {
    "speaker": "D",
    "text": " then show a lot of things that don't really work.",
    "start": 1014567.188
  },
  {
    "speaker": "D",
    "text": " Make sense for everybody? We agree on this? We're right on this? That's why I wanted to... Actually, that's why I was targeting Sylvia Burson to join soon, but now with the hiring, we're going to postpone that problem. We'll see the budgeting, what allows.",
    "start": 1020119.063
  },
  {
    "speaker": "A",
    "text": " I'll just go raise more money.",
    "start": 1040419.688
  },
  {
    "speaker": "D",
    "text": " Yeah, we just need today's one.",
    "start": 1043895.9379999998
  },
  {
    "speaker": "A",
    "text": " Just make more money, raise more money, I guess.",
    "start": 1044942.188
  },
  {
    "speaker": "A",
    "text": " I mean, I don't think it's fundamentally complex, this piece of work. But it's going to be the part where we start trying to do the that then once we get all of this initial call flow in place, then how do we start pulling metrics out of it? How do we start identifying where is this particular block start and end? And how do we actually trigger? Do we trigger API calls? Do we trigger a web hook?",
    "start": 1051152.188
  },
  {
    "speaker": "B",
    "text": " Yeah, we need to get our fingers in jambas probably.",
    "start": 1077797.8129999998
  },
  {
    "speaker": "A",
    "text": " Yeah, how do we, yeah, can we, can we do, do we want to go from first principles, right? And go and try and put our own tracing in place without building into the code, because that's fundamentally what we're going to have to do in some cases.",
    "start": 1081088.438
  },
  {
    "speaker": "D",
    "text": " Also, guys, we have to not forget we have money and we do not have time, right? So, if you need an expert for AWS, we have actually three experts for that. Use them. If you need an expert for Jambones, you need Dave Horton, we can pay him two days, right? There's no issue to get him for one, two day. He actually told us that we should do that, right? And we get him to get in-depth knowledge to accelerate things, right? So, don't...",
    "start": 1094065.313
  },
  {
    "speaker": "A",
    "text": " So talking with Fuzzy, did the AWS guy come back?",
    "start": 1127005.3129999998
  },
  {
    "speaker": "D",
    "text": " No, I have to come. I have to check with him exactly what the fuck is happening with this because we didn't do that. So, but the AWS guy, so the second discussion that I had with them was quite clear, right? We're on the good path of doing Kafka. It costs what it costs. If we want to remove the cost, we go to Kinesis. But that's not going to scale the same.",
    "start": 1133400.938
  },
  {
    "speaker": "C",
    "text": " So first I want to see why we need Kinesis or Kafka. Because they are streaming and for what? Technically.",
    "start": 1160991.563
  },
  {
    "speaker": "D",
    "text": " Technically, for all the data that we're going to stream and make dashboards out of.",
    "start": 1169682.188
  },
  {
    "speaker": "D",
    "text": " All the SMS, all the messages, all the data that flows from the network, all the quality metrics that flows from the network, all of that needs to be streamed to Kafka, and from there to Elasticsearch. So Elasticsearch API will not manage streaming data at that rate. It works up to hundreds of requests per second, but even then it starts lagging. So the moment you start inserting directly into ELK from whatever event bus, it's going to start crashing. All right, and we don't want to do that.",
    "start": 1175858.438
  },
  {
    "speaker": "C",
    "text": "Kinesis\u7684ElastiHas Direct",
    "start": 1213557.188
  },
  {
    "speaker": "D",
    "text": " I got cut elastic also has, you know, set up.",
    "start": 1216797.188
  },
  {
    "speaker": "C",
    "text": " No, I mean, yeah. You need to put something in between.",
    "start": 1219615.313
  },
  {
    "speaker": "D",
    "text": " Logstash right? You put Logstash and you configure it like yeah",
    "start": 1226685.938
  },
  {
    "speaker": "B",
    "text": " In Amazon they have connect, they have something with connect. Yeah, Kafka doesn't matter. Yeah, for Kafka.",
    "start": 1230415.313
  },
  {
    "speaker": "D",
    "text": " Yeah, it doesn't matter. Yeah, for Kafka. Yeah, let's take that discussion offline separately, right?",
    "start": 1234650.938
  },
  {
    "speaker": "D",
    "text": " We can discuss it at the end of this call, Jusan. Product-wise, what else do we have to do jointly? Sorry.",
    "start": 1244522.813
  },
  {
    "speaker": "B",
    "text": " VoiceBoot.",
    "start": 1253061.563
  },
  {
    "speaker": "C",
    "text": " for Twilio it's okay, I will first I'll check and then I'll come back with questions because if it's like HubSpot, then maybe an application like a market",
    "start": 1255778.438
  },
  {
    "speaker": "D",
    "text": " It's exactly the same thing, right? They have an API. We have to build a microservice that connects all the keys. But what I would like Alex to do there, you have to start playing with security storage for our customers, make it a bit more abstract to see how we can handle keys to manage the keys for the customer. We need to place an API where they can set up API keys for their third parties.",
    "start": 1265835.9379999998
  },
  {
    "speaker": "C",
    "text": " Oh, okay. For example, the Italian. But...",
    "start": 1294894.688
  },
  {
    "speaker": "D",
    "text": " like for example the Italian but...",
    "start": 1295164.688
  },
  {
    "speaker": "D",
    "text": " No, they need to manage those keys, right? So we need another application, like a small microservice that's going to be managing the keys for our customers. For example, add the created HubSpot account, add their API keys from the HubSpot, manage it, delete the account, all that stuff, right? Basic shit.",
    "start": 1299231.563
  },
  {
    "speaker": "C",
    "text": " For HubSpot, when they installed the app, we are getting the kiss because there's a callback. API called. Yes, but they have to",
    "start": 1315971.563
  },
  {
    "speaker": "D",
    "text": " Yes, but they have to manage that. They have to view it to see if it's the correct one or do they check that?",
    "start": 1324527.188
  },
  {
    "speaker": "C",
    "text": " No, they're not checking. So they are sending us the keys. And then we refresh the keys every 30 minutes to call the APIs. What we are missing, let's say, if they decide, OK, I give up and they uninstall on their side, there's no webhook to uninstall on our side. So I have an API, just get out HubSpot from my account. Like, erase it. And we erase it. Let's say this is HubSpot.",
    "start": 1328982.1879999998
  },
  {
    "speaker": "D",
    "text": " This is up for film. Yeah, this is up for film. Let's see for API for.",
    "start": 1352438.4379999998
  },
  {
    "speaker": "A",
    "text": " We do. Is that just stop 500 in with like incorrect? He's used for the calls that we make.",
    "start": 1356994.688
  },
  {
    "speaker": "C",
    "text": " I need to check with what happens if I put a stupid key. Because this is...",
    "start": 1363390.313
  },
  {
    "speaker": "A",
    "text": " Cause this is like, this would be like a great, you know, like one of the example demo flows, right? Is someone deleted the HubSpot integration, right? By accident. And suddenly all your call identification flows are failing. We can test. Yeah, we can really quickly report and even alert on, wow, okay, this is broken in your call flows. Just as long as we have access to that response, that HTTP response.",
    "start": 1367710.313
  },
  {
    "speaker": "C",
    "text": " Perhaps what will give us back the error, we convert it to another error. Now we have 404 or 500 simple maps. Maybe we can expand it more.",
    "start": 1392263.4379999998
  },
  {
    "speaker": "A",
    "text": " Yeah. And so that's something that is missing that we did miss within the, uh, the flow builder and what we were, what me and Matt were talking about was error handling, right? Like what do we do when HubSpot is down? Right. Like when we use that to ID. So that was.",
    "start": 1403468.438
  },
  {
    "speaker": "C",
    "text": " I'm calling her spot only first time. That's it.",
    "start": 1417643.438
  },
  {
    "speaker": "A",
    "text": " Yeah, no, I know. Like, let's say HubSpot goes down, right? And we're using that as an ID flow. We're assuming that there's identified or not identified.",
    "start": 1421541.563
  },
  {
    "speaker": "C",
    "text": " The question is, so first time when the number is calling and it's a new number in our database, a separate database for HubSpot integration, I go to HubSpot. After, I don't go anymore to HubSpot.",
    "start": 1431261.563
  },
  {
    "speaker": "A",
    "text": " Of course it should be.",
    "start": 1440880.3129999998
  },
  {
    "speaker": "C",
    "text": " Yes, it's caching. And I don't know how they can update details every five minutes. They webhook. So every time when they update customer number, email, or name, any fields what you want to track, they're calling us webhook our apps. Nice. But if they install, this is the problem. Yes, you identify the even... Maybe we need the like a one, 10 minutes ping. Yeah, yeah.",
    "start": 1444930.313
  },
  {
    "speaker": "A",
    "text": " Yeah, yeah, yeah, like a like a sink basically.",
    "start": 1473584.063
  },
  {
    "speaker": "C",
    "text": " But this is next level, so it's like more and more...",
    "start": 1475997.188
  },
  {
    "speaker": "A",
    "text": " This is already quite complicated. This is already very deep integration.",
    "start": 1479439.6879999998
  },
  {
    "speaker": "C",
    "text": " If they will put a webhook, I will just put webhook to uninstall that and that's it and bye. And there are a lot of people requesting the webhook but they still don't want to implement.",
    "start": 1483101.5620000002
  },
  {
    "speaker": "C",
    "text": " Let's see what will load us on that side.",
    "start": 1494914.0620000002
  },
  {
    "speaker": "C",
    "text": " And for vice media would like to discuss for security. I mean, it's our app with the right between jumbos and HubSpot. What type of security you put based on tokens because we need tenant. Everything is by tenant. So our account and we cannot do one.",
    "start": 1499402.8129999998
  },
  {
    "speaker": "D",
    "text": " The basic shit that we have to do is have the JSON web token, right? DWT and that's it. That's the first thing you have to start doing. Oh, you can all quotes, right? Every, every type of should be token based. It's a token internally also, right? So you guys, I'm using this.",
    "start": 1521897.1879999998
  },
  {
    "speaker": "B",
    "text": " We need an overview on that.",
    "start": 1545285.938
  },
  {
    "speaker": "C",
    "text": " Okay, I'm going to start.",
    "start": 1549875.9379999998
  },
  {
    "speaker": "D",
    "text": " Okay, I'm gonna start. I'm gonna start drawing something on this right. I'm gonna start doing something today.",
    "start": 1550280.938
  },
  {
    "speaker": "C",
    "text": " Because the application will be like billing up, calling fulfillment up or vice versa. Yes.",
    "start": 1561199.063
  },
  {
    "speaker": "D",
    "text": " Yes, yes we do. Yes we don't trust them right? We don't trust anything.",
    "start": 1565822.813
  },
  {
    "speaker": "C",
    "text": " \u0414\u0430, \u044f \u0441\u043e\u0433\u043b\u0430\u0441\u0435\u043d, \u043c\u044b \u043d\u0435 \u0434\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0438\u0447\u0435\u043c\u0443, \u043d\u043e...",
    "start": 1575036.5629999998
  },
  {
    "speaker": "D",
    "text": " Yep, we're gonna work on a token-based system internally, right, also.",
    "start": 1579069.688
  },
  {
    "speaker": "D",
    "text": " It's too early to add in right now API gateways, I think, in my opinion, if you feel differently.",
    "start": 1585600.3129999998
  },
  {
    "speaker": "D",
    "text": " but adding internal API gateways, I think it's a bit early because we already have a couple of meters for load balancing and that should trade for the APIs.",
    "start": 1594577.813
  },
  {
    "speaker": "B",
    "text": " Actually, no, we're going to create, but it's, we're going to use them. It's ingresses from Amazon. Ingresses, yes, so you already have the ingresses.",
    "start": 1603065.9379999998
  },
  {
    "speaker": "D",
    "text": " ingress yes so you already have the ingress is there but i don't want to add kong like a specific api gate on top of the",
    "start": 1612077.188
  },
  {
    "speaker": "B",
    "text": " Amazon also has API gateway as it is.",
    "start": 1619519.0629999998
  },
  {
    "speaker": "D",
    "text": " Existing gate",
    "start": 1620177.1879999998
  },
  {
    "speaker": "D",
    "text": " I'm not sure about it. The thing is I would like to start moving. So we're using a lot of Amazon, which is great to move fast. I'm not saying no, but where we have, where there are solutions that are proven to work better than Amazon, I would prefer not to use Amazon, right? Because it locks us down very, very badly, right?",
    "start": 1624952.813
  },
  {
    "speaker": "D",
    "text": " If we start using, for example, AWS gateway and they start increasing the pricing for that, you're fucked. You cannot do anything, right? You won't change your technical architecture from one month to another because Amazon starts pricing differently.",
    "start": 1653589.688
  },
  {
    "speaker": "B",
    "text": " Yeah, but at this point I wouldn't put Kong instead of...",
    "start": 1677113.438
  },
  {
    "speaker": "D",
    "text": " No, but I would rather put nothing. So we have carbonitis. Let's use it as it is, right? We have ingress in there. It's going to work.",
    "start": 1682496.5629999998
  },
  {
    "speaker": "B",
    "text": " there it's gonna work we have the ingress in in the communities so that's it",
    "start": 1688959.6879999998
  },
  {
    "speaker": "D",
    "text": " Yes, exactly. We are exploring that. And we keep it like that. We want to add API gateways. First, let's see what we can do that is open source, right?",
    "start": 1694444.0629999998
  },
  {
    "speaker": "B",
    "text": " We are exposing...",
    "start": 1695287.8129999998
  },
  {
    "speaker": "D",
    "text": " And it's the same for Doppler, for example, versus AWS secrets, right? At least I'm a bit more comfortable there because there's the direct migration path from one to another, right? You can easily migrate from AWS to Doppler, but I would rather start Doppler from the beginning.",
    "start": 1703691.563
  },
  {
    "speaker": "D",
    "text": " than use AWS, right? We need to avoid like, basically what we're trying to preach to our customer is that there is no way to have one solution for everything that works properly, right? And gets you the best outcome. So we actually need to work from the same rationale, right? Internally also don't go to one vendor to buy everything because it's not going to work out well in the end, right?",
    "start": 1726405.313
  },
  {
    "speaker": "D",
    "text": " se termina ce spun aici",
    "start": 1758231.563
  },
  {
    "speaker": "C",
    "text": " for Doppler, it's a management, it's not a storage.",
    "start": 1761690.9379999998
  },
  {
    "speaker": "D",
    "text": " Dr. is also storing the secrets.",
    "start": 1767782.813
  },
  {
    "speaker": "C",
    "text": " For secrets for the moment they in parameters store in Amazon. But yeah, because from Doppler we can send to parameters store we can send to I don't know GCP to Azure to Kubernetes whenever we want. That's why I saw it as a management.",
    "start": 1775241.563
  },
  {
    "speaker": "C",
    "text": " Dac\u0103 v\u0103 place video-ul, da\u021bi like, s\u0103 v\u0103 abona\u021bi \u0219i s\u0103 v\u0103 l\u0103sa\u021bi un comentariu. V\u0103 mul\u021bumesc frumos!",
    "start": 1796436.563
  },
  {
    "speaker": "D",
    "text": " Yeah, it's not like the parameters I don't worry, I'm not worried that much, right? But just saying in general, there's a very, you know, easy, ah, let's go and use, for example, let's go and use Kinesis, right? It's easy to set up, it's easy to use. But if you look at the pricing, it's definitely it's a, it's a locked in trap, right? It's a, ah, I got you to use it. Easy set up, easy to use. The moment you actually start using in production, I'm going to, you know, take shitloads of money out of you. Really fast.",
    "start": 1799035.313
  },
  {
    "speaker": "C",
    "text": "",
    "start": 1830405.938
  },
  {
    "speaker": "D",
    "text": " No, the SGS is not the same thing, right? SGS is not the same thing.",
    "start": 1834169.063
  },
  {
    "speaker": "C",
    "text": " It's not the same thing, but for if it's not streaming and just queuing.",
    "start": 1838067.188
  },
  {
    "speaker": "D",
    "text": " We're not just queuing, right? Anymore.",
    "start": 1843804.6879999998
  },
  {
    "speaker": "D",
    "text": " We're going to have to stream data to various places. We're going to have to take the data, adapt it, enrich it, move it to their flows, stream it to their systems if needed.",
    "start": 1851854.063
  },
  {
    "speaker": "D",
    "text": " So basically our play changed quite a lot, right? It's not necessarily anymore enable voice features for others, right? Like initially we were discussing when we started this, it was, you know, offer the possibility for a call center to use them as teams.",
    "start": 1865657.813
  },
  {
    "speaker": "D",
    "text": " when we started open right now, the focus is customer experience, right? How do you improve your experiences? So we need to offer you analytics over that. We need to offer you shitloads of data on various aspects of your business. So you can take, you know, take a well fought and well data driven decisions around your customer experience flows, right?",
    "start": 1884591.5629999998
  },
  {
    "speaker": "D",
    "text": " So the paradigm of what we're trying to build, it's entirely different. It's totally different. It's no longer the same tool that we were trying to build a year ago.",
    "start": 1913110.3129999998
  },
  {
    "speaker": "D",
    "text": " We're building a tool basically that we just put in the middle to collect data, stream it to places and make intelligent decisions afterwards for your user experience flow.",
    "start": 1929107.813
  },
  {
    "speaker": "D",
    "text": " Because what I would like at some point to sell to these guys is, look, based on your existing current flow, if we plug in our system, we have an AI model that will learn about your user flow and suggest improvements in your funnel, right, in your customer experience funnel.",
    "start": 1943198.4379999998
  },
  {
    "speaker": "D",
    "text": " Right. Because this is where we're going to get very interesting about our tool, right? When you're going to start selling out automatically, look, your, uh, 20,000 euros per month, SMS campaigns are doing nothing. So you should stop doing it. But you don't want a person to look at that data because that's stupid enough. It's simple enough for AI models to look at it and say, this flow is not doing anything for your customer experience. Those are the pre-flows are way better invest in them, right? Add this to this feature.",
    "start": 1970147.813
  },
  {
    "speaker": "D",
    "text": " Right? So that's why we need streaming, because we need to capture all that data. We need to start feeding it at some point into machine learning and we start playing with that.",
    "start": 2006277.188
  },
  {
    "speaker": "D",
    "text": " Makes sense Alex, no?",
    "start": 2019777.188
  },
  {
    "speaker": "D",
    "text": " Why do we need a streaming bit?",
    "start": 2023253.4379999998
  },
  {
    "speaker": "C",
    "text": " From now on, it's OK.",
    "start": 2025092.813
  },
  {
    "speaker": "D",
    "text": " Do you want to talk too much stupid stuff?",
    "start": 2031640.313
  },
  {
    "speaker": "A",
    "text": " No. So OK, so just, I guess, start the way we do this, right? Is we create the geotickets, assign them, and then pick the ones. So who wanted to do what? I think that's the best question.",
    "start": 2037310.3129999998
  },
  {
    "speaker": "A",
    "text": " I think Eddie was keen on doing a voice box.",
    "start": 2057155.3130000003
  },
  {
    "speaker": "B",
    "text": " Yeah, I'll start first with securing Node-RED. That would be the first thing and then I'll see about the... Okay, cool.",
    "start": 2060547.188
  },
  {
    "speaker": "D",
    "text": " Guys, you create your own tickets, right? Yeah, yeah. You don't need people to create your own tickets, OK? Interesting.",
    "start": 2072916.5630000003
  },
  {
    "speaker": "A",
    "text": " Um, Alex, what were you going to look at?",
    "start": 2078907.1869999997
  },
  {
    "speaker": "C",
    "text": " So, to ensure accuracy we can whittle down the edge M\u00e4dja by changing the Continu Ants method.",
    "start": 2082839.0629999998
  },
  {
    "speaker": "A",
    "text": " Yeah, you should be able to get the Twilio account details from Eddie because we should use the same one that's linked to SendGrid. Okay. Because they're the same account. What? Twilio bought SendGrid, so the SendGrid account is the same as Twilio. So...",
    "start": 2086011.5620000002
  },
  {
    "speaker": "B",
    "text": " And he gave me the SendGrid account.",
    "start": 2105940.938
  },
  {
    "speaker": "A",
    "text": " You have this. Oh, I gave you the sender account. Okay, maybe I need to add you to",
    "start": 2108134.6870000004
  },
  {
    "speaker": "B",
    "text": " You, you gave",
    "start": 2111442.187
  },
  {
    "speaker": "A",
    "text": " me the sendgreed.com. God, I'm a terrible pest. Okay, fine. Fine, Eddie. I'll do my job.",
    "start": 2112505.313
  },
  {
    "speaker": "C",
    "text": " I guess I'm in the details, I don't... Research it. And then we'll add security.",
    "start": 2118782.8129999996
  },
  {
    "speaker": "A",
    "text": " Yeah, I'll apply for Twilio credits as well. So that we can start. Well, actually, I probably won't do that. We'll probably just pay for them for now, because it won't be too expensive. And there's no point wasting time on a Twilio credits if we're just gonna",
    "start": 2125465.313
  },
  {
    "speaker": "C",
    "text": " But will you operate only with their number so they can do global? They can do, yeah, they can do global.",
    "start": 2141040.9370000004
  },
  {
    "speaker": "A",
    "text": " It's literally, we're just saying we've got a call from this number. Can you do a look up for us and tell us about it? We're just posting the 164 to them.",
    "start": 2147115.937
  },
  {
    "speaker": "C",
    "text": " Okay, I'll get to research.",
    "start": 2158894.688
  },
  {
    "speaker": "D",
    "text": " Okay, so then let's adjourn. Let's go and start doing work, work, work. Alex, do you want to start? Do you want to stay, talk more about something? I have more 10 minutes, please.",
    "start": 2169779.062
  },
  {
    "speaker": "C",
    "text": " For security thinking, do we put a library like we did for Voxbon or for the moment we write hardcoded tokens?",
    "start": 2180444.062
  },
  {
    "speaker": "D",
    "text": " Now find a well supported library and that's it. Right? You don't know. All right. Cool.",
    "start": 2191564.688
  },
  {
    "speaker": "C",
    "text": " Yeah,",
    "start": 2195918.438
  },
  {
    "speaker": "D",
    "text": " Yeah, yep, yep, yep, yep.",
    "start": 2199192.187
  },
  {
    "speaker": "D",
    "text": " If you need to use something else because reasons, you know, spend 10 minutes research what's better than Spring Security with JWT enabled should be more than enough, right?",
    "start": 2204845.3129999996
  },
  {
    "speaker": "D",
    "text": " If you want to use something else, look for something else.",
    "start": 2217400.3120000004
  },
  {
    "speaker": "C",
    "text": " No, I don't think so.",
    "start": 2218834.687
  },
  {
    "speaker": "D",
    "text": " The thing about this is that it's hard to manage everything properly from an external part. I think there was Spring Boot Admin that was allowing you to manage a bit Spring Boot apps with Spring Security because, for example, if you want to deactivate all the tokens with Spring Security, you can't really deactivate all tokens from all the microservices, right? Or renew. Add the command to renew all tokens.",
    "start": 2222125.313
  },
  {
    "speaker": "C",
    "text": " for between apps what we were using in works when it was this XupKey. So we were passing up a header parameter and there we just",
    "start": 2250677.8129999996
  },
  {
    "speaker": "D",
    "text": " Yeah, but you have to do it. You have to do it, right? The validation of a key, right?",
    "start": 2261055.938
  },
  {
    "speaker": "C",
    "text": " For GVT, we need to generate it. So it should be like user and password. And I don't have any between apps, between Jumbons and HubSpot, between Core and HubSpot and so on.",
    "start": 2266489.688
  },
  {
    "speaker": "D",
    "text": " Yeah, so look at look a bit at spring with other means if it's working properly. I'm not sure if it's supported anymore. At some point it was worth it.",
    "start": 2278454.062
  },
  {
    "speaker": "D",
    "text": " Oh.",
    "start": 2289962.8120000004
  },
  {
    "speaker": "C",
    "text": " I hope it's something simple on this. Let's see how it goes.",
    "start": 2290350.938
  },
  {
    "speaker": "D",
    "text": " Yeah, what I want to avoid is to manage all the tokens in the database, right? For bidding applications by ourselves, right?",
    "start": 2294586.5629999996
  },
  {
    "speaker": "D",
    "text": " You won't be able to do that.",
    "start": 2306365.3129999996
  },
  {
    "speaker": "D",
    "text": " We're going to have 20 integrations. We don't want to have calling. I don't know how many more internal applications.",
    "start": 2310955.313
  },
  {
    "speaker": "D",
    "text": " We won't be able to do that manual labor.",
    "start": 2319814.688
  },
  {
    "speaker": "D",
    "text": " Because right now Spring Security has basically, with Spring Security, you put between two systems, right? You have the token which is generated and stored into the database, right? That's it. And you have to copy it and make sure it goes to the other applications as an approved token, right?",
    "start": 2323729.688
  },
  {
    "speaker": "C",
    "text": " Yeah, but this token is hardcoded, so if it's leaked...",
    "start": 2341937.813
  },
  {
    "speaker": "D",
    "text": " So yeah, that's why we need an application that manages all those tokens internally, right?",
    "start": 2346004.687
  },
  {
    "speaker": "C",
    "text": " Yes, oh, like Hubs for they give you so you ask for token they give you a token that is short valid. But I don't know if you want to go that far. The work has the same like",
    "start": 2356247.812
  },
  {
    "speaker": "D",
    "text": " spend half an hour or two hours reading about how is best way to manage tokens internally for applications and let's use see what comes out of that right",
    "start": 2368448.438
  },
  {
    "speaker": "D",
    "text": " Eddie, you have an opinion on this or you want to? No, no, I'm okay.",
    "start": 2386707.188
  },
  {
    "speaker": "D",
    "text": " I'm gonna prepare my luggage for tomorrow.",
    "start": 2401894.688
  },
  {
    "speaker": "D",
    "text": " So, finally, I'm back full time.",
    "start": 2406315.938
  },
  {
    "speaker": "C",
    "text": " I am not impressed. Luigi, where are you?",
    "start": 2410264.688
  },
  {
    "speaker": "D",
    "text": " I am in Spain, the LRM.",
    "start": 2416559.063
  },
  {
    "speaker": "A",
    "text": " You want to where I am?",
    "start": 2418229.688
  },
  {
    "speaker": "B",
    "text": " Do you want to?",
    "start": 2420119.688
  },
  {
    "speaker": "B",
    "text": " What the fuck, Gentil, where... that's... You have palm trees.",
    "start": 2424557.813
  },
  {
    "speaker": "A",
    "text": " I have palm trees in my backyard. Yeah, why? Why? Because I live in a tropical country, definitely not in London. Look how well my tomatoes are doing.",
    "start": 2427949.688
  },
  {
    "speaker": "D",
    "text": " Great. Good to be in London, seriously.",
    "start": 2441922.188
  },
  {
    "speaker": "A",
    "text": " Yeah, this is my backyard.",
    "start": 2443795.313
  },
  {
    "speaker": "D",
    "text": " It's blue, quite wild. Yes, but not this big. Not this green, yeah.",
    "start": 2446900.3120000004
  },
  {
    "speaker": "A",
    "text": " Not this green, yes. You probably recognize London if I go this way. Yes. Already. Hold on. There we go. Now it looks like London.",
    "start": 2452502.8120000004
  },
  {
    "speaker": "D",
    "text": " Yes, what's happening there, good. Why is it sunny?",
    "start": 2467707.188
  },
  {
    "speaker": "A",
    "text": " Why is it sunny? Because it's been like 20-30 degrees the last two weeks.",
    "start": 2470204.6879999996
  },
  {
    "speaker": "A",
    "text": " um yeah it's actually quite cold today so it's only like 19. But you know not in Spain, not in Greece, just in London. Okay I've sent you all invites to uh to Twilio so that should be so okay.",
    "start": 2477714.063
  },
  {
    "speaker": "D",
    "text": " Okay, cool.",
    "start": 2489965.313
  },
  {
    "speaker": "D",
    "text": " That's his fiber internet.",
    "start": 2502284.0620000004
  },
  {
    "speaker": "D",
    "text": " Sorry, that's my RAM running out. Shit, seriously?",
    "start": 2509793.438
  },
  {
    "speaker": "A",
    "text": " Sorry, that's my RAM running out.",
    "start": 2509860.9379999996
  },
  {
    "speaker": "D",
    "text": " So the guys from Apple are moving very, very slow with the apps, it's not working, the VAT was wrong. Like what the f***?",
    "start": 2513573.438
  },
  {
    "speaker": "D",
    "text": " I'm trying to do it again.",
    "start": 2525115.937
  },
  {
    "speaker": "D",
    "text": " Hopefully next week or this week we're going to start ordering. For you, junk is going to be very easy because it's going to be delivered in the cold and garden or something like that.",
    "start": 2528524.688
  },
  {
    "speaker": "B",
    "text": " Can you actually do the delivery for us in Belgium and just send them with FedEx?",
    "start": 2544015.938
  },
  {
    "speaker": "D",
    "text": " I'm not sure. I think so. First of all, the shop is in London. So most probably I can assume you will have to ship them with edX. Yes. Because if not, we're going to make it more complex because it's already from UK to EU. It's crossing. Yeah.",
    "start": 2552520.938
  },
  {
    "speaker": "C",
    "text": " And if you want to move on, I will cross another...",
    "start": 2570256.562
  },
  {
    "speaker": "D",
    "text": " Yes, exactly right. So at the end of the day.",
    "start": 2572484.063
  },
  {
    "speaker": "A",
    "text": " At the end of the day, I'd train across to Belgium and send them from there.",
    "start": 2574542.812
  },
  {
    "speaker": "D",
    "text": " Worst case scenario, I'll go, I'll take the train.",
    "start": 2579858.438
  },
  {
    "speaker": "A",
    "text": " and take a suitcase back filled with laptops.",
    "start": 2582946.563
  },
  {
    "speaker": "D",
    "text": " Yes, and then we need someone in the middle to pass it. With someone not suspicious like Prague, for example, right? Nothing happened in Prague. I'm suspicious at all. No, Bruges, Bruges. Bruges? Okay, nothing happened in Bruges. We go to Bruges. And we meet all in Bruges and that's it. Okay. Have fun. Yes, bye.",
    "start": 2586389.063
  },
  {
    "speaker": "A",
    "text": " All right. Yeah, no, I added everyone to Twilio. It's a different thing to SendGrid, apparently, but it V accounts the link that...",
    "start": 2606166.563
  },
  {
    "speaker": "D",
    "text": " Got the email, yes.",
    "start": 2613372.1879999996
  },
  {
    "speaker": "A",
    "text": " Yeah, cool. All right.",
    "start": 2614604.063
  },
  {
    "speaker": "D",
    "text": " All right, yeah. See you, bye.",
    "start": 2616105.938
  },
  {
    "speaker": "A",
    "text": " Bye.",
    "start": 2618670.938
  }
]