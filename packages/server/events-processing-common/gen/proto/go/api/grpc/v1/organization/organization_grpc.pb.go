// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: organization.proto

package organization_grpc_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OrganizationGrpcServiceClient is the client API for OrganizationGrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OrganizationGrpcServiceClient interface {
	UpsertOrganization(ctx context.Context, in *UpsertOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	LinkPhoneNumberToOrganization(ctx context.Context, in *LinkPhoneNumberToOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	LinkEmailToOrganization(ctx context.Context, in *LinkEmailToOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	LinkLocationToOrganization(ctx context.Context, in *LinkLocationToOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	LinkDomainToOrganization(ctx context.Context, in *LinkDomainToOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	UpsertCustomFieldToOrganization(ctx context.Context, in *CustomFieldForOrganizationGrpcRequest, opts ...grpc.CallOption) (*CustomFieldIdGrpcResponse, error)
	UpdateOrganizationRenewalLikelihood(ctx context.Context, in *OrganizationRenewalLikelihoodRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	UpdateOrganizationRenewalForecast(ctx context.Context, in *OrganizationRenewalForecastRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	UpdateOrganizationBillingDetails(ctx context.Context, in *OrganizationBillingDetailsRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	RequestRenewNextCycleDate(ctx context.Context, in *RequestRenewNextCycleDateRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	HideOrganization(ctx context.Context, in *OrganizationIdGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	ShowOrganization(ctx context.Context, in *OrganizationIdGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	RefreshLastTouchpoint(ctx context.Context, in *OrganizationIdGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	AddParentOrganization(ctx context.Context, in *AddParentOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
	RemoveParentOrganization(ctx context.Context, in *RemoveParentOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error)
}

type organizationGrpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrganizationGrpcServiceClient(cc grpc.ClientConnInterface) OrganizationGrpcServiceClient {
	return &organizationGrpcServiceClient{cc}
}

func (c *organizationGrpcServiceClient) UpsertOrganization(ctx context.Context, in *UpsertOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/UpsertOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) LinkPhoneNumberToOrganization(ctx context.Context, in *LinkPhoneNumberToOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/LinkPhoneNumberToOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) LinkEmailToOrganization(ctx context.Context, in *LinkEmailToOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/LinkEmailToOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) LinkLocationToOrganization(ctx context.Context, in *LinkLocationToOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/LinkLocationToOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) LinkDomainToOrganization(ctx context.Context, in *LinkDomainToOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/LinkDomainToOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) UpsertCustomFieldToOrganization(ctx context.Context, in *CustomFieldForOrganizationGrpcRequest, opts ...grpc.CallOption) (*CustomFieldIdGrpcResponse, error) {
	out := new(CustomFieldIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/UpsertCustomFieldToOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) UpdateOrganizationRenewalLikelihood(ctx context.Context, in *OrganizationRenewalLikelihoodRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/UpdateOrganizationRenewalLikelihood", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) UpdateOrganizationRenewalForecast(ctx context.Context, in *OrganizationRenewalForecastRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/UpdateOrganizationRenewalForecast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) UpdateOrganizationBillingDetails(ctx context.Context, in *OrganizationBillingDetailsRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/UpdateOrganizationBillingDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) RequestRenewNextCycleDate(ctx context.Context, in *RequestRenewNextCycleDateRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/RequestRenewNextCycleDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) HideOrganization(ctx context.Context, in *OrganizationIdGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/HideOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) ShowOrganization(ctx context.Context, in *OrganizationIdGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/ShowOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) RefreshLastTouchpoint(ctx context.Context, in *OrganizationIdGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/RefreshLastTouchpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) AddParentOrganization(ctx context.Context, in *AddParentOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/AddParentOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationGrpcServiceClient) RemoveParentOrganization(ctx context.Context, in *RemoveParentOrganizationGrpcRequest, opts ...grpc.CallOption) (*OrganizationIdGrpcResponse, error) {
	out := new(OrganizationIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/organizationGrpcService/RemoveParentOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrganizationGrpcServiceServer is the server API for OrganizationGrpcService service.
// All implementations should embed UnimplementedOrganizationGrpcServiceServer
// for forward compatibility
type OrganizationGrpcServiceServer interface {
	UpsertOrganization(context.Context, *UpsertOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error)
	LinkPhoneNumberToOrganization(context.Context, *LinkPhoneNumberToOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error)
	LinkEmailToOrganization(context.Context, *LinkEmailToOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error)
	LinkLocationToOrganization(context.Context, *LinkLocationToOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error)
	LinkDomainToOrganization(context.Context, *LinkDomainToOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error)
	UpsertCustomFieldToOrganization(context.Context, *CustomFieldForOrganizationGrpcRequest) (*CustomFieldIdGrpcResponse, error)
	UpdateOrganizationRenewalLikelihood(context.Context, *OrganizationRenewalLikelihoodRequest) (*OrganizationIdGrpcResponse, error)
	UpdateOrganizationRenewalForecast(context.Context, *OrganizationRenewalForecastRequest) (*OrganizationIdGrpcResponse, error)
	UpdateOrganizationBillingDetails(context.Context, *OrganizationBillingDetailsRequest) (*OrganizationIdGrpcResponse, error)
	RequestRenewNextCycleDate(context.Context, *RequestRenewNextCycleDateRequest) (*OrganizationIdGrpcResponse, error)
	HideOrganization(context.Context, *OrganizationIdGrpcRequest) (*OrganizationIdGrpcResponse, error)
	ShowOrganization(context.Context, *OrganizationIdGrpcRequest) (*OrganizationIdGrpcResponse, error)
	RefreshLastTouchpoint(context.Context, *OrganizationIdGrpcRequest) (*OrganizationIdGrpcResponse, error)
	AddParentOrganization(context.Context, *AddParentOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error)
	RemoveParentOrganization(context.Context, *RemoveParentOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error)
}

// UnimplementedOrganizationGrpcServiceServer should be embedded to have forward compatible implementations.
type UnimplementedOrganizationGrpcServiceServer struct {
}

func (UnimplementedOrganizationGrpcServiceServer) UpsertOrganization(context.Context, *UpsertOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertOrganization not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) LinkPhoneNumberToOrganization(context.Context, *LinkPhoneNumberToOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LinkPhoneNumberToOrganization not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) LinkEmailToOrganization(context.Context, *LinkEmailToOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LinkEmailToOrganization not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) LinkLocationToOrganization(context.Context, *LinkLocationToOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LinkLocationToOrganization not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) LinkDomainToOrganization(context.Context, *LinkDomainToOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LinkDomainToOrganization not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) UpsertCustomFieldToOrganization(context.Context, *CustomFieldForOrganizationGrpcRequest) (*CustomFieldIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertCustomFieldToOrganization not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) UpdateOrganizationRenewalLikelihood(context.Context, *OrganizationRenewalLikelihoodRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrganizationRenewalLikelihood not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) UpdateOrganizationRenewalForecast(context.Context, *OrganizationRenewalForecastRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrganizationRenewalForecast not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) UpdateOrganizationBillingDetails(context.Context, *OrganizationBillingDetailsRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrganizationBillingDetails not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) RequestRenewNextCycleDate(context.Context, *RequestRenewNextCycleDateRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestRenewNextCycleDate not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) HideOrganization(context.Context, *OrganizationIdGrpcRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HideOrganization not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) ShowOrganization(context.Context, *OrganizationIdGrpcRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowOrganization not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) RefreshLastTouchpoint(context.Context, *OrganizationIdGrpcRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshLastTouchpoint not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) AddParentOrganization(context.Context, *AddParentOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddParentOrganization not implemented")
}
func (UnimplementedOrganizationGrpcServiceServer) RemoveParentOrganization(context.Context, *RemoveParentOrganizationGrpcRequest) (*OrganizationIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveParentOrganization not implemented")
}

// UnsafeOrganizationGrpcServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OrganizationGrpcServiceServer will
// result in compilation errors.
type UnsafeOrganizationGrpcServiceServer interface {
	mustEmbedUnimplementedOrganizationGrpcServiceServer()
}

func RegisterOrganizationGrpcServiceServer(s grpc.ServiceRegistrar, srv OrganizationGrpcServiceServer) {
	s.RegisterService(&OrganizationGrpcService_ServiceDesc, srv)
}

func _OrganizationGrpcService_UpsertOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertOrganizationGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).UpsertOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/UpsertOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).UpsertOrganization(ctx, req.(*UpsertOrganizationGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_LinkPhoneNumberToOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkPhoneNumberToOrganizationGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).LinkPhoneNumberToOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/LinkPhoneNumberToOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).LinkPhoneNumberToOrganization(ctx, req.(*LinkPhoneNumberToOrganizationGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_LinkEmailToOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkEmailToOrganizationGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).LinkEmailToOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/LinkEmailToOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).LinkEmailToOrganization(ctx, req.(*LinkEmailToOrganizationGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_LinkLocationToOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkLocationToOrganizationGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).LinkLocationToOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/LinkLocationToOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).LinkLocationToOrganization(ctx, req.(*LinkLocationToOrganizationGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_LinkDomainToOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkDomainToOrganizationGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).LinkDomainToOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/LinkDomainToOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).LinkDomainToOrganization(ctx, req.(*LinkDomainToOrganizationGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_UpsertCustomFieldToOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomFieldForOrganizationGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).UpsertCustomFieldToOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/UpsertCustomFieldToOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).UpsertCustomFieldToOrganization(ctx, req.(*CustomFieldForOrganizationGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_UpdateOrganizationRenewalLikelihood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRenewalLikelihoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).UpdateOrganizationRenewalLikelihood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/UpdateOrganizationRenewalLikelihood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).UpdateOrganizationRenewalLikelihood(ctx, req.(*OrganizationRenewalLikelihoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_UpdateOrganizationRenewalForecast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRenewalForecastRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).UpdateOrganizationRenewalForecast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/UpdateOrganizationRenewalForecast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).UpdateOrganizationRenewalForecast(ctx, req.(*OrganizationRenewalForecastRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_UpdateOrganizationBillingDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationBillingDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).UpdateOrganizationBillingDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/UpdateOrganizationBillingDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).UpdateOrganizationBillingDetails(ctx, req.(*OrganizationBillingDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_RequestRenewNextCycleDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRenewNextCycleDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).RequestRenewNextCycleDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/RequestRenewNextCycleDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).RequestRenewNextCycleDate(ctx, req.(*RequestRenewNextCycleDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_HideOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationIdGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).HideOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/HideOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).HideOrganization(ctx, req.(*OrganizationIdGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_ShowOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationIdGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).ShowOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/ShowOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).ShowOrganization(ctx, req.(*OrganizationIdGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_RefreshLastTouchpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationIdGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).RefreshLastTouchpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/RefreshLastTouchpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).RefreshLastTouchpoint(ctx, req.(*OrganizationIdGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_AddParentOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddParentOrganizationGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).AddParentOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/AddParentOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).AddParentOrganization(ctx, req.(*AddParentOrganizationGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrganizationGrpcService_RemoveParentOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveParentOrganizationGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationGrpcServiceServer).RemoveParentOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organizationGrpcService/RemoveParentOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationGrpcServiceServer).RemoveParentOrganization(ctx, req.(*RemoveParentOrganizationGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OrganizationGrpcService_ServiceDesc is the grpc.ServiceDesc for OrganizationGrpcService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OrganizationGrpcService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "organizationGrpcService",
	HandlerType: (*OrganizationGrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpsertOrganization",
			Handler:    _OrganizationGrpcService_UpsertOrganization_Handler,
		},
		{
			MethodName: "LinkPhoneNumberToOrganization",
			Handler:    _OrganizationGrpcService_LinkPhoneNumberToOrganization_Handler,
		},
		{
			MethodName: "LinkEmailToOrganization",
			Handler:    _OrganizationGrpcService_LinkEmailToOrganization_Handler,
		},
		{
			MethodName: "LinkLocationToOrganization",
			Handler:    _OrganizationGrpcService_LinkLocationToOrganization_Handler,
		},
		{
			MethodName: "LinkDomainToOrganization",
			Handler:    _OrganizationGrpcService_LinkDomainToOrganization_Handler,
		},
		{
			MethodName: "UpsertCustomFieldToOrganization",
			Handler:    _OrganizationGrpcService_UpsertCustomFieldToOrganization_Handler,
		},
		{
			MethodName: "UpdateOrganizationRenewalLikelihood",
			Handler:    _OrganizationGrpcService_UpdateOrganizationRenewalLikelihood_Handler,
		},
		{
			MethodName: "UpdateOrganizationRenewalForecast",
			Handler:    _OrganizationGrpcService_UpdateOrganizationRenewalForecast_Handler,
		},
		{
			MethodName: "UpdateOrganizationBillingDetails",
			Handler:    _OrganizationGrpcService_UpdateOrganizationBillingDetails_Handler,
		},
		{
			MethodName: "RequestRenewNextCycleDate",
			Handler:    _OrganizationGrpcService_RequestRenewNextCycleDate_Handler,
		},
		{
			MethodName: "HideOrganization",
			Handler:    _OrganizationGrpcService_HideOrganization_Handler,
		},
		{
			MethodName: "ShowOrganization",
			Handler:    _OrganizationGrpcService_ShowOrganization_Handler,
		},
		{
			MethodName: "RefreshLastTouchpoint",
			Handler:    _OrganizationGrpcService_RefreshLastTouchpoint_Handler,
		},
		{
			MethodName: "AddParentOrganization",
			Handler:    _OrganizationGrpcService_AddParentOrganization_Handler,
		},
		{
			MethodName: "RemoveParentOrganization",
			Handler:    _OrganizationGrpcService_RemoveParentOrganization_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "organization.proto",
}
