// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: v1/job_role.proto

package job_role_grpc_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// JobRoleGrpcServiceClient is the client API for JobRoleGrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobRoleGrpcServiceClient interface {
	CreateJobRole(ctx context.Context, in *CreateJobRoleGrpcRequest, opts ...grpc.CallOption) (*JobRoleIdGrpcResponse, error)
}

type jobRoleGrpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJobRoleGrpcServiceClient(cc grpc.ClientConnInterface) JobRoleGrpcServiceClient {
	return &jobRoleGrpcServiceClient{cc}
}

func (c *jobRoleGrpcServiceClient) CreateJobRole(ctx context.Context, in *CreateJobRoleGrpcRequest, opts ...grpc.CallOption) (*JobRoleIdGrpcResponse, error) {
	out := new(JobRoleIdGrpcResponse)
	err := c.cc.Invoke(ctx, "/jobRoleGrpcService/CreateJobRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobRoleGrpcServiceServer is the server API for JobRoleGrpcService service.
// All implementations should embed UnimplementedJobRoleGrpcServiceServer
// for forward compatibility
type JobRoleGrpcServiceServer interface {
	CreateJobRole(context.Context, *CreateJobRoleGrpcRequest) (*JobRoleIdGrpcResponse, error)
}

// UnimplementedJobRoleGrpcServiceServer should be embedded to have forward compatible implementations.
type UnimplementedJobRoleGrpcServiceServer struct {
}

func (UnimplementedJobRoleGrpcServiceServer) CreateJobRole(context.Context, *CreateJobRoleGrpcRequest) (*JobRoleIdGrpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJobRole not implemented")
}

// UnsafeJobRoleGrpcServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobRoleGrpcServiceServer will
// result in compilation errors.
type UnsafeJobRoleGrpcServiceServer interface {
	mustEmbedUnimplementedJobRoleGrpcServiceServer()
}

func RegisterJobRoleGrpcServiceServer(s grpc.ServiceRegistrar, srv JobRoleGrpcServiceServer) {
	s.RegisterService(&JobRoleGrpcService_ServiceDesc, srv)
}

func _JobRoleGrpcService_CreateJobRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobRoleGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobRoleGrpcServiceServer).CreateJobRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobRoleGrpcService/CreateJobRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobRoleGrpcServiceServer).CreateJobRole(ctx, req.(*CreateJobRoleGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// JobRoleGrpcService_ServiceDesc is the grpc.ServiceDesc for JobRoleGrpcService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobRoleGrpcService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "jobRoleGrpcService",
	HandlerType: (*JobRoleGrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJobRole",
			Handler:    _JobRoleGrpcService_CreateJobRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/job_role.proto",
}
