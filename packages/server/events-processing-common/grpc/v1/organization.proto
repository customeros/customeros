syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "api/grpc/v1/organization;organization_grpc_service";

message UpsertOrganizationGrpcRequest {
  string id = 1;
  string tenant = 2;
  string name = 3;
  string description = 4;
  string website = 5;
  string industry = 6;
  bool isPublic = 7;
  int64 employees = 8;
  string market = 9;
  string appSource = 10;
  string source = 11;
  string sourceOfTruth = 12;
  google.protobuf.Timestamp  createdAt = 13;
  google.protobuf.Timestamp  updatedAt = 14;
  string subIndustry = 15;
  string industryGroup = 16;
  string targetAudience = 17;
  string valueProposition = 18;
  string lastFundingRound = 19;
  string lastFundingAmount = 20;
  string slackChannelLink = 21;
}

message LinkPhoneNumberToOrganizationGrpcRequest {
  string tenant = 1;
  string organizationId = 2;
  string phoneNumberId = 3;
  bool primary = 4;
  string label = 5;
}

message LinkEmailToOrganizationGrpcRequest {
  string tenant = 1;
  string organizationId = 2;
  string emailId = 3;
  bool primary = 4;
  string label = 5;
}

message LinkDomainToOrganizationGrpcRequest {
  string tenant = 1;
  string organizationId = 2;
  string domain = 3;
}

message OrganizationIdGrpcResponse {
  string id = 1;
}

service organizationGrpcService {
  rpc UpsertOrganization(UpsertOrganizationGrpcRequest) returns (OrganizationIdGrpcResponse);
  rpc LinkPhoneNumberToOrganization(LinkPhoneNumberToOrganizationGrpcRequest) returns (OrganizationIdGrpcResponse);
  rpc LinkEmailToOrganization(LinkEmailToOrganizationGrpcRequest) returns (OrganizationIdGrpcResponse);
  rpc LinkDomainToOrganization(LinkDomainToOrganizationGrpcRequest) returns (OrganizationIdGrpcResponse);
}
