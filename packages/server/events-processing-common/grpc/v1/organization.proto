syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "api/grpc/v1/organization;organization_grpc_service";

message UpsertOrganizationGrpcRequest {
  string id = 1;
  string tenant = 2;
  string name = 3;
  string description = 4;
  string website = 5;
  string industry = 6;
  bool isPublic = 7;
  int64 employees = 8;
  string market = 9;
  string appSource = 10;
  string source = 11;
  string sourceOfTruth = 12;
  google.protobuf.Timestamp  createdAt = 13;
  google.protobuf.Timestamp  updatedAt = 14;
  string subIndustry = 15;
  string industryGroup = 16;
  string targetAudience = 17;
  string valueProposition = 18;
  string lastFundingRound = 19;
  string lastFundingAmount = 20;
  string userId = 21;
  bool hide = 22;
  string note = 23;
}

message OrganizationIdGrpcRequest {
  string tenant = 1;
  string organizationId = 2;
  string userId = 3;
}

message LinkPhoneNumberToOrganizationGrpcRequest {
  string tenant = 1;
  string organizationId = 2;
  string phoneNumberId = 3;
  bool primary = 4;
  string label = 5;
}

message LinkEmailToOrganizationGrpcRequest {
  string tenant = 1;
  string organizationId = 2;
  string emailId = 3;
  bool primary = 4;
  string label = 5;
}

message LinkDomainToOrganizationGrpcRequest {
  string tenant = 1;
  string organizationId = 2;
  string domain = 3;
  string userId = 4;
}

enum Likelihood {
  NONE_LIKELIHOOD = 0;
  HIGH = 1;
  MEDIUM = 2;
  LOW = 3;
  ZERO = 4;
}

message OrganizationRenewalLikelihoodRequest {
  string tenant = 1;
  string organizationId = 2;
  string userId = 3;
  Likelihood likelihood = 4;
  optional string comment = 5;
}

message OrganizationRenewalForecastRequest {
  string tenant = 1;
  string organizationId = 2;
  string userId = 3;
  optional double amount = 4;
  optional string comment = 5;
}

enum Frequency {
  WEEKLY = 0;
  BIWEEKLY = 1;
  MONTHLY = 2;
  QUARTERLY = 3;
  BIANNUALLY = 4;
  ANNUALLY = 5;
}

message OrganizationBillingDetailsRequest {
  string tenant = 1;
  string organizationId = 2;
  string userId = 3;
  optional double amount = 4;
  optional Frequency frequency = 5;
  optional Frequency renewalCycle = 6;
  optional google.protobuf.Timestamp  cycleStart = 7;
}

message RequestRenewNextCycleDateRequest {
  string tenant = 1;
  string organizationId = 2;
}

message OrganizationIdGrpcResponse {
  string id = 1;
}

service organizationGrpcService {
  rpc UpsertOrganization(UpsertOrganizationGrpcRequest) returns (OrganizationIdGrpcResponse);
  rpc LinkPhoneNumberToOrganization(LinkPhoneNumberToOrganizationGrpcRequest) returns (OrganizationIdGrpcResponse);
  rpc LinkEmailToOrganization(LinkEmailToOrganizationGrpcRequest) returns (OrganizationIdGrpcResponse);
  rpc LinkDomainToOrganization(LinkDomainToOrganizationGrpcRequest) returns (OrganizationIdGrpcResponse);
  rpc UpdateOrganizationRenewalLikelihood(OrganizationRenewalLikelihoodRequest) returns (OrganizationIdGrpcResponse);
  rpc UpdateOrganizationRenewalForecast(OrganizationRenewalForecastRequest) returns (OrganizationIdGrpcResponse);
  rpc UpdateOrganizationBillingDetails(OrganizationBillingDetailsRequest) returns (OrganizationIdGrpcResponse);
  rpc RequestRenewNextCycleDate(RequestRenewNextCycleDateRequest) returns (OrganizationIdGrpcResponse);
  rpc HideOrganization(OrganizationIdGrpcRequest) returns (OrganizationIdGrpcResponse);
  rpc ShowOrganization(OrganizationIdGrpcRequest) returns (OrganizationIdGrpcResponse);
}
